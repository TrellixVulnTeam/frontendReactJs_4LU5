{"ast":null,"code":"import _objectSpread from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*!\r\n * Chart.js v3.1.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n\n      if (me._request) {\n        return;\n      }\n\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n\n        me._request = null;\n\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          me._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          me._notify(chart, anims, date, 'complete');\n        }\n\n        remaining += items.length;\n      });\n\n      me._lastDate = date;\n\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n\n      if (me._active) {\n        me._notify(false);\n\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n\n      if (!me._active) {\n        me._target[prop] = to;\n\n        me._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n\n  var _iterator2 = _createForOfIteratorHelper(items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n        return;\n      }\n\n      delete stacks[meta.vScale.id][meta.index];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (me._data !== data) {\n        if (me._data) {\n          unlistenArrayEvents(me._data, me);\n          clearStacks(me._cachedMeta);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      me._dataCheck();\n\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n\n      me._dataCheck();\n\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      me._resyncElements(resetNewElements);\n\n      if (stackChanged) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n          data = me._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = me._getOtherScale(scale);\n\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, value, parsed, otherValue;\n\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var numMeta = me._cachedMeta.data.length;\n      var numData = me._data.length;\n\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        me.parse(0, count);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n\n      me.parse(start, count);\n\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._insertElements(this.getDataset().data.length - count, count);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._removeElements(this._cachedMeta.data.length - 1, 1);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._removeElements(0, 1);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._removeElements(start, count);\n\n      this._insertElements(start, arguments.length - 2);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._insertElements(0, arguments.length);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = me._getRuler();\n\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : undefined,\n          width: horizontal ? undefined : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n          vScale = _me$_cachedMeta.vScale,\n          _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n          baseValue = _me$options.base,\n          minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n\n        if (value === 0) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      var actualBase = baseValue || 0;\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n\n      unclipArea(chart.ctx);\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n          _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n          xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n          _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n          yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n          data = _this$_cachedMeta.data,\n          _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n          xScale = _me$_cachedMeta2.xScale,\n          yScale = _me$_cachedMeta2.yScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n        var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n        var properties = {\n          x: x,\n          y: y,\n          skip: isNaN(x) || isNaN(y)\n        };\n\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        me.updateElement(point, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var _me$_getRotationExten = me._getRotationExtents(),\n          circumference = _me$_getRotationExten.circumference,\n          rotation = _me$_getRotationExten.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n\n      var circumference = me._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      var startAngle = me._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n\n            if (controller !== me) {\n              controller.configure();\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      me._drawStart = start;\n      me._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n          xScale = _me$_cachedMeta3.xScale,\n          yScale = _me$_cachedMeta3.yScale,\n          _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed.y);\n        var x = properties.x = xScale.getPixelForValue(parsed.x, i);\n        var y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n        properties.skip = isNaN(x) || isNaN(y) || nullData;\n        properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n        properties.parsed = parsed;\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n        index = _metasets$i2.index,\n        data = _metasets$i2.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = width - padding.width;\n    var availableHeight = height - padding.height;\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n      x = _getRelativePosition$.x,\n      y = _getRelativePosition$.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return me;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near'\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this4;\n\n    _classCallCheck(this, Scale);\n\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n\n      var _me$getUserBounds = me.getUserBounds(),\n          min = _me$getUserBounds.min,\n          max = _me$getUserBounds.max,\n          minDefined = _me$getUserBounds.minDefined,\n          maxDefined = _me$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n\n      for (i = 0; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n          _me$options2 = me.options,\n          tickOpts = _me$options2.ticks,\n          titleOpts = _me$options2.title,\n          gridOpts = _me$options2.grid;\n\n      var display = me._isVisible();\n\n      var isHorizontal = me.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n              first = _me$_getLabelSizes.first,\n              last = _me$_getLabelSizes.last,\n              widest = _me$_getLabelSizes.widest,\n              highest = _me$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      me._handleMargins();\n\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n          _me$options3$ticks = _me$options3.ticks,\n          align = _me$options3$ticks.align,\n          padding = _me$options3$ticks.padding,\n          position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n          axis = _this$options.axis,\n          position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest)\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = me._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext(0));\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      for (i = 0; i < ticksLength; ++i) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y]\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n          position = _me$options4.position,\n          ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n          position = _me$options5.position,\n          _me$options5$ticks = _me$options5.ticks,\n          crossAlign = _me$options5$ticks.crossAlign,\n          mirror = _me$options5$ticks.mirror,\n          padding = _me$options5$ticks.padding;\n\n      var labelSizes = me._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n\n      if (me.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = me.chart;\n      var position = me.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n      var chart = me.chart;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n\n      if (axisWidth) {\n        var lastLineWidth = borderOpts.lineWidth;\n        var borderValue = me._borderValue;\n        var x1, x2, y1, y2;\n\n        if (me.isHorizontal()) {\n          x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n          x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n          y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        drawLine({\n          x: x1,\n          y: y1\n        }, {\n          x: x2,\n          y: y2\n        }, {\n          width: axisWidth,\n          color: borderOpts.borderColor\n        });\n      }\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = me.ctx;\n\n      var area = me._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options2 = this.options,\n          position = _this$options2.position,\n          title = _this$options2.title,\n          reverse = _this$options2.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom') {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n\n      if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n\n        me._notify(me._init, chart, 'install');\n      }\n\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n      var result = me._notify(descriptors, chart, hook, args);\n\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n\n        me._notify(me._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator3 = _createForOfIteratorHelper(descriptors),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var descriptor = _step3.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n\n      var array = _toConsumableArray(scopes);\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(names),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var prop = _step4.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator5 = _createForOfIteratorHelper(names),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var prop = _step5.value;\n\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return false;\n}\n\nvar version = \"3.1.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, config) {\n    var _this5 = this;\n\n    _classCallCheck(this, Chart);\n\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n          aspectRatio = _this$options3.aspectRatio,\n          maintainAspectRatio = _this$options3.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var oldRatio = me.currentDevicePixelRatio;\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n\n      if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n        return;\n      }\n\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      retinaScale(me, newRatio, true);\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasetIndex\",\n    value: function _updateMetasetIndex(meta, index) {\n      var metasets = this._metasets;\n      var oldIndex = meta.index;\n\n      if (oldIndex !== index) {\n        metasets[oldIndex] = metasets[index];\n        metasets[index] = meta;\n        meta.index = index;\n      }\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n          datasets = me.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n\n      me._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n\n          meta = me.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n\n        me._updateMetasetIndex(meta, i);\n\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      me._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n\n      me._plugins.invalidate();\n\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n            controller = _me$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      me._minPadding = minPadding;\n\n      me._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me._updateDatasets(mode);\n\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      me._layers.sort(compare2Level('z', '_idx'));\n\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n            width = _me$_resizeBeforeDraw.width,\n            height = _me$_resizeBeforeDraw.height;\n\n        me._resize(width, height);\n\n        me._resizeBeforeDraw = null;\n      }\n\n      me.clear();\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = me._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = me.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n      meta.controller.draw();\n      unclipArea(ctx);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = metasets[datasetIndex] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n          ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      me.config.clearCache();\n\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        me._eventHandler(e);\n      };\n\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n\n      if (me.options.responsive) {\n        listener = function listener(width, height) {\n          if (me.canvas) {\n            me.resize(width, height);\n          }\n        };\n\n        var detached;\n\n        var attached = function attached() {\n          _remove('attach', attached);\n\n          me.attached = true;\n          me.resize();\n\n          _add('resize', listener);\n\n          _add('detach', detached);\n        };\n\n        detached = function detached() {\n          me.attached = false;\n\n          _remove('resize', listener);\n\n          _add('attach', attached);\n        };\n\n        if (platform.isAttached(me.canvas)) {\n          attached();\n        } else {\n          detached();\n        }\n      } else {\n        me.attached = true;\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      each(listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n            index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = me._handleEvent(e, replay);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        me.render();\n      }\n\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n          lastActive = _me$_active === void 0 ? [] : _me$_active,\n          options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n\n      me._lastEvent = null;\n\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n\n      changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  var startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n\n    for (var i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n\n  pathArc(ctx, element);\n  ctx.fill();\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      endAngle = element.endAngle,\n      pixelMargin = element.pixelMargin;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element);\n  }\n\n  pathArc(ctx, element);\n  ctx.stroke();\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this7;\n\n    _classCallCheck(this, ArcElement);\n\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n\n    return _this7;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint.angle,\n          distance = _getAngleFromPoint.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = distance >= innerRadius && distance <= outerRadius;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n      var offset = options.offset || 0;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = Math.floor(me.circumference / TAU);\n\n      if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n\n      if (offset && me.circumference < TAU) {\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, me);\n      drawBorder(ctx, me);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref2 = params || {},\n      _ref2$move = _ref2.move,\n      move = _ref2$move === void 0 ? true : _ref2$move,\n      reverse = _ref2.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator6 = _createForOfIteratorHelper(segments),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var segment = _step6.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this8;\n\n    _classCallCheck(this, LineElement);\n\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n\n    return _this8;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (options.tension && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n\n        _updateBezierControlPoints(me._points, options, chartArea, loop);\n\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n\n      var segmentMethod = _getSegmentMethod(me);\n\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n\n      var _iterator7 = _createForOfIteratorHelper(segments),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var segment = _step7.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n\n      ctx.save();\n\n      _draw(ctx, me, start, count);\n\n      ctx.restore();\n\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  function PointElement(cfg) {\n    var _this9;\n\n    _classCallCheck(this, PointElement);\n\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n\n    return _this9;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this10;\n\n    _classCallCheck(this, BarElement);\n\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n\n    return _this10;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n      _ref4$x = _ref4.x,\n      x = _ref4$x === void 0 ? null : _ref4$x,\n      _ref4$y = _ref4.y,\n      y = _ref4$y === void 0 ? null : _ref4$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (segment) {\n    var first = linePoints[segment.start];\n    var last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  var chart = source.chart,\n      scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\n\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nfunction getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator8 = _createForOfIteratorHelper(segments),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var segment = _step8.value;\n      var bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[segment.start],\n          end: points[segment.end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator9 = _createForOfIteratorHelper(targetSegments),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var tgt = _step9.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator10 = _createForOfIteratorHelper(fillSources),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var fillSource = _step10.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref5 = bounds || {},\n      property = _ref5.property,\n      start = _ref5.start,\n      end = _ref5.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator11 = _createForOfIteratorHelper(segments),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var _step11$value = _step11.value,\n          src = _step11$value.source,\n          tgt = _step11$value.target,\n          start = _step11$value.start,\n          end = _step11$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref6 = fillOption || {},\n      _ref6$above = _ref6.above,\n      above = _ref6$above === void 0 ? color : _ref6$above,\n      _ref6$below = _ref6.below,\n      below = _ref6$below === void 0 ? color : _ref6$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        source.line.updateControlPoints(area);\n\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this11;\n\n    _classCallCheck(this, Legend);\n\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n          ctx = me.ctx;\n\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = me._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxWidth = me.maxWidth,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxHeight = me.maxHeight,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var top = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          top = 0;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += fontSize + padding;\n        hitboxes[i] = {\n          left: left,\n          top: top,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        top += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n\n      if (!me.options.display) {\n        return;\n      }\n\n      var titleHeight = me._computeTitleHeight();\n\n      var hitboxes = me.legendHitBoxes,\n          _me$options6 = me.options,\n          align = _me$options6.align,\n          padding = _me$options6.labels.padding;\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n        var _iterator12 = _createForOfIteratorHelper(hitboxes),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var hitbox = _step12.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n        var _iterator13 = _createForOfIteratorHelper(hitboxes),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var _hitbox = _step13.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n\n        me._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n          columnSizes = me.columnSizes,\n          lineWidths = me.lineWidths,\n          ctx = me.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: legendItem.textAlign\n        });\n      };\n\n      var isHorizontal = me.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n\n        me._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this12;\n\n    _classCallCheck(this, Title);\n\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n\n      var _me$_drawArgs = me._drawArgs(offset),\n          titleX = _me$_drawArgs.titleX,\n          titleY = _me$_drawArgs.titleY,\n          maxWidth = _me$_drawArgs.maxWidth,\n          rotation = _me$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this13;\n\n    _classCallCheck(this, Tooltip);\n\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n          caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      me._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref7) {\n        var datasetIndex = _ref7.datasetIndex,\n            index = _ref7.index;\n\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = me._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n\n      var positionChanged = me._positionChanged(active, e);\n\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        me._active = active;\n\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\n\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this14;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getUserBounds2 = me.getUserBounds(),\n          minDefined = _me$getUserBounds2.minDefined,\n          maxDefined = _me$getUserBounds2.maxDefined;\n\n      var _me$getMinMax = me.getMinMax(true),\n          min = _me$getMinMax.min,\n          max = _me$getMinMax.max;\n\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n\n    if (niceMin <= min) {\n      j++;\n    }\n\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this15;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$options7 = me.options,\n          beginAtZero = _me$options7.beginAtZero,\n          stacked = _me$options7.stacked;\n\n      var _me$getUserBounds3 = me.getUserBounds(),\n          minDefined = _me$getUserBounds3.minDefined,\n          maxDefined = _me$getUserBounds3.maxDefined;\n\n      var min = me.min,\n          max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero || stacked) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        setMax(max + 1);\n\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax2 = me.getMinMax(true),\n          min = _me$getMinMax2.min,\n          max = _me$getMinMax2.max;\n\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      var tickFont = me._resolveTickFontOptions(0);\n\n      return Math.ceil(me.height / tickFont.lineHeight);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this16;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax3 = me.getMinMax(true),\n          min = _me$getMinMax3.min,\n          max = _me$getMinMax3.max;\n\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n\n      var _me$getUserBounds4 = me.getUserBounds(),\n          minDefined = _me$getUserBounds4.minDefined,\n          maxDefined = _me$getUserBounds4.maxDefined;\n\n      var min = me.min;\n      var max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var i, textSize, pointPosition;\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    var _opts = scale.options.pointLabels.setContext(scale.getContext(i));\n\n    padding[i] = _opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(_opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n\n    var _angle = toDegrees(scale.getIndexAngle(i));\n\n    var size = labelSizes[i];\n    adjustPointPositionForLabelHeight(_angle, size, pointLabelPosition);\n    var textAlign = getTextAlignForAngle(_angle);\n    var left = void 0;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    var right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign: textAlign,\n      left: left,\n      top: pointLabelPosition.y,\n      right: right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this17;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax4 = me.getMinMax(false),\n          min = _me$getMinMax4.min,\n          max = _me$getMinMax4.max;\n\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options8 = me.options,\n          backgroundColor = _me$options8.backgroundColor,\n          circular = _me$options8.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var options = scale.options.time;\n  var parser = options.parser,\n      round = options.round,\n      isoWeekday = options.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this18;\n\n    _classCallCheck(this, TimeScale);\n\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    return _this18;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _me$getUserBounds5 = me.getUserBounds(),\n          min = _me$getUserBounds5.min,\n          max = _me$getUserBounds5.max,\n          minDefined = _me$getUserBounds5.minDefined,\n          maxDefined = _me$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = me.min;\n      var max = me.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n      var size = me._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = me.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    var result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this19;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._maxIndex = undefined;\n    return _this19;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n\n      var timestamps = me._getTimestampsForTable();\n\n      me._table = me.buildLookupTable(timestamps);\n      me._maxIndex = me._table.length - 1;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var me = this;\n      var min = me.min,\n          max = me.max;\n\n      if (!timestamps.length) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      var items = [min];\n      var i, ilen, curr;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr > min && curr < max) {\n          items.push(curr);\n        }\n      }\n\n      items.push(max);\n      return items;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return interpolate(this._table, value) / this._maxIndex;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * this._maxIndex, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","_elementsEqual","ac","getAngleFromPoint","ad","_readValueToProps","ae","_updateBezierControlPoints","af","_computeSegments","ag","_boundSegments","ah","_steppedInterpolation","ai","_bezierInterpolation","aj","_pointInLine","ak","_steppedLineTo","al","_bezierCurveTo","am","drawPoint","an","addRoundedRectPath","ao","toTRBL","ap","toTRBLCorners","aq","_boundSegment","ar","_normalizeAngle","as","getRtlAdapter","at","overrideTextDirection","au","_textX","av","restoreTextDirection","aw","noop","ax","distanceBetweenPoints","ay","_setMinAndMaxByKey","az","niceNum","aA","almostWhole","aB","almostEquals","aC","_decimalPlaces","aD","_longestText","aE","_filterBetween","aF","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","itemStacks","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","prototype","getAllScaleValues","_cache","$bar","metas","getMatchingVisibleMetas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","reset","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","stackIndex","_getStackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","listen","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","events","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","cubicInterpolationMode","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDatasetsDraw","drawTime","beforeDatasetDraw","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","backdropPadding","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","backdropColor","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","rotate","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.1.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\r\nexport { d as defaults } from './chunks/helpers.segment.js';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    const me = this;\r\n    if (me._request) {\r\n      return;\r\n    }\r\n    me._running = true;\r\n    me._request = requestAnimFrame.call(window, () => {\r\n      me._update();\r\n      me._request = null;\r\n      if (me._running) {\r\n        me._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    const me = this;\r\n    let remaining = 0;\r\n    me._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        me._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        me._notify(chart, anims, date, 'complete');\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    me._lastDate = date;\r\n    if (remaining === 0) {\r\n      me._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    const me = this;\r\n    if (me._active) {\r\n      me._notify(false);\r\n      const currentValue = me._target[me._prop];\r\n      const elapsed = date - me._start;\r\n      const remain = me._duration - elapsed;\r\n      me._start = date;\r\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      me._total += elapsed;\r\n      me._loop = !!cfg.loop;\r\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      me._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    const me = this;\r\n    if (me._active) {\r\n      me.tick(Date.now());\r\n      me._active = false;\r\n      me._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const me = this;\r\n    const elapsed = date - me._start;\r\n    const duration = me._duration;\r\n    const prop = me._prop;\r\n    const from = me._from;\r\n    const loop = me._loop;\r\n    const to = me._to;\r\n    let factor;\r\n    me._active = from !== to && (loop || (elapsed < duration));\r\n    if (!me._active) {\r\n      me._target[prop] = to;\r\n      me._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      me._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\r\n    me._target[prop] = me._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return Object.assign(Object.create(parent),\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return Object.assign(Object.create(parent), {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[meta.vScale.id][meta.index];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    me.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = me.getScaleForId(xid);\r\n    meta.yScale = me.getScaleForId(yid);\r\n    meta.rScale = me.getScaleForId(rid);\r\n    meta.iScale = me.getScaleForId(iid);\r\n    meta.vScale = me.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    if (isObject(data)) {\r\n      me._data = convertObjectDataToArray(data);\r\n    } else if (me._data !== data) {\r\n      if (me._data) {\r\n        unlistenArrayEvents(me._data, me);\r\n        clearStacks(me._cachedMeta);\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, me);\r\n      }\r\n      me._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me._dataCheck();\r\n    if (me.datasetElementType) {\r\n      meta.dataset = new me.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    let stackChanged = false;\r\n    me._dataCheck();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    me._resyncElements(resetNewElements);\r\n    if (stackChanged) {\r\n      updateStacks(me, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(me._type);\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\r\n    me.options = config.createResolver(scopes, me.getContext());\r\n    me._parsing = me.options.parsing;\r\n  }\r\n  parse(start, count) {\r\n    const me = this;\r\n    const {_cachedMeta: meta, _data: data} = me;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (me._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = me.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = me.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = me.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(me, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      range.min = Math.min(range.min, value);\r\n      range.max = Math.max(range.max, value);\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = me._getOtherScale(scale);\r\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, value, parsed, otherValue;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      value = parsed[scale.axis];\r\n      otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      me.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        me.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me._cachedDataOpts = {};\r\n    me.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me._ctx;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = me._drawStart || 0;\r\n    const count = me._drawCount || (elements.length - start);\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.active) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < me._cachedMeta.data.length) {\r\n      const element = me._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(me.getContext(), index, element));\r\n      context.parsed = me.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n    } else {\r\n      context = me.$context ||\r\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\r\n      context.dataset = dataset;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const me = this;\r\n    const active = mode === 'active';\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = me.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => me.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = me.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\r\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const me = this;\r\n    const numMeta = me._cachedMeta.data.length;\r\n    const numData = me._data.length;\r\n    if (numData > numMeta) {\r\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      me._removeElements(numData, numMeta - numData);\r\n    }\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      me.parse(0, count);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new me.dataElementType();\r\n    }\r\n    if (me._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    me.parse(start, count);\r\n    if (resetNewElements) {\r\n      me.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    if (me._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._insertElements(this.getDataset().data.length - count, count);\r\n  }\r\n  _onDataPop() {\r\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\r\n  }\r\n  _onDataShift() {\r\n    this._removeElements(0, 1);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    this._removeElements(start, count);\r\n    this._insertElements(start, arguments.length - 2);\r\n  }\r\n  _onDataUnshift() {\r\n    this._insertElements(0, arguments.length);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale) {\r\n  if (!scale._cache.$bar) {\r\n    const metas = scale.getMatchingVisibleMetas('bar');\r\n    let values = [];\r\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\r\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(scale) {\r\n  const values = getAllScaleValues(scale);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    me.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = me._cachedMeta;\r\n    meta.stack = me.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const vScale = me._cachedMeta.vScale;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = me._getRuler();\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = me.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\r\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : undefined,\r\n        width: horizontal ? undefined : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      me.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name) {\r\n    const stacks = this._getStacks(datasetIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(iScale);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: me._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const me = this;\r\n    const {vScale, _stacked} = me._cachedMeta;\r\n    const {base: baseValue, minBarLength} = me.options;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\r\n      size = size < 0 ? -minBarLength : minBarLength;\r\n      if (value === 0) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    const actualBase = baseValue || 0;\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\r\n      if (size > 0) {\r\n        base += halfGrid;\r\n        size -= halfGrid;\r\n      } else if (size < 0) {\r\n        base -= halfGrid;\r\n        size += halfGrid;\r\n      }\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const me = this;\r\n    const scale = ruler.scale;\r\n    const options = me.options;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    clipArea(chart.ctx, chart.chartArea);\r\n    for (; i < ilen; ++i) {\r\n      if (me.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(me._ctx);\r\n      }\r\n    }\r\n    unclipArea(chart.ctx);\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  interaction: {\r\n    mode: 'index'\r\n  },\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = [];\r\n    let i, ilen, item;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      item = data[i];\r\n      parsed.push({\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n        _custom: item && item.r && +item.r\r\n      });\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const {data, _parsed} = this._cachedMeta;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const points = me._cachedMeta.data;\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && me.getParsed(i);\r\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\r\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\r\n      const properties = {\r\n        x,\r\n        y,\r\n        skip: isNaN(x) || isNaN(y)\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = me.resolveDataElementOptions(i, mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    let i, ilen;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      meta._parsed[i] = +data[i];\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    const me = this;\r\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\r\n      if (me.chart.isDatasetVisible(i)) {\r\n        const controller = me.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const {chartArea} = chart;\r\n    const meta = me._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\r\n    const chartWeight = me._getRingWeight(me.index);\r\n    const {circumference, rotation} = me._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(me.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\r\n    me.offsetX = offsetX * outerRadius;\r\n    me.offsetY = offsetY * outerRadius;\r\n    meta.total = me.calculateTotal();\r\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\r\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\r\n    me.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const circumference = me._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\r\n      return 0;\r\n    }\r\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : me.innerRadius;\r\n    const outerRadius = animateScale ? 0 : me.outerRadius;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    let startAngle = me._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += me._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = me._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + me.offsetX,\r\n        y: centerY + me.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      startAngle += circumference;\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const chart = me.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    const me = this;\r\n    let max = 0;\r\n    const chart = me.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          if (controller !== me) {\r\n            controller.configure();\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = me.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    me._drawStart = start;\r\n    me._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = me.resolveDatasetElementOptions(mode);\r\n    if (!me.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = me.options.segment;\r\n    me.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    me.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale, _stacked} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    const spanGaps = me.options.spanGaps;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && me.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = me.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed.y);\r\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\r\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\r\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\r\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\r\n      properties.parsed = parsed;\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      if (!directUpdate) {\r\n        me.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    me.outerRadius = outerRadius - (radiusLength * me.index);\r\n    me.innerRadius = me.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const dataset = me.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = me._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / me.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += me._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: me.resolveDataElementOptions(i, mode)\r\n      };\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const vScale = me._cachedMeta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = me.resolveDatasetElementOptions(mode);\r\n      if (!me.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      me.updateElement(line, undefined, properties, mode);\r\n    }\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const scale = me._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = me.resolveDataElementOptions(i, mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  let items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      options.axis = 'x';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      options.axis = 'y';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos: box.position,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    if (layout.horizontal) {\r\n      layout.width = layout.box.fullSize && params.availableWidth;\r\n      layout.height = params.hBoxMaxHeight;\r\n    } else {\r\n      layout.width = params.vBoxMaxWidth;\r\n      layout.height = layout.box.fullSize && params.availableHeight;\r\n    }\r\n  }\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout) {\r\n  const box = layout.box;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(layout.pos)) {\r\n    if (layout.size) {\r\n      chartArea[layout.pos] -= layout.size;\r\n    }\r\n    layout.size = layout.horizontal ? box.height : box.width;\r\n    chartArea[layout.pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params) {\r\n  const userPadding = params.padding;\r\n  let x = chartArea.x;\r\n  let y = chartArea.y;\r\n  let i, ilen, layout, box;\r\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    if (layout.horizontal) {\r\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\r\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\r\n      box.top = y;\r\n      box.bottom = y + box.height;\r\n      box.width = box.right - box.left;\r\n      y = box.bottom;\r\n    } else {\r\n      box.left = x;\r\n      box.right = x + box.width;\r\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\r\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\r\n      box.height = box.bottom - box.top;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = width - padding.width;\r\n    const availableHeight = height - padding.height;\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params);\r\n    fitBoxes(verticalBoxes, chartArea, params);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\r\n      fitBoxes(verticalBoxes, chartArea, params);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h);\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  const element = container || canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    const parent = _getParentNode(element);\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.addedNodes.length; i++) {\r\n        const added = entry.addedNodes[i];\r\n        if (added === element || added === parent) {\r\n          listener(entry.target);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const observer = new MutationObserver(entries => {\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.removedNodes.length; i++) {\r\n        if (entry.removedNodes[i] === canvas) {\r\n          listener();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(container, {childList: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && _getParentNode(container));\r\n  }\r\n}\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const me = this;\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return me;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return Object.assign(Object.create(parent), {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return Object.assign(Object.create(parent), {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right} = scale;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    titleY = offsetFromEdge(scale, position, offset);\r\n    maxWidth = right - left;\r\n  } else {\r\n    titleX = offsetFromEdge(scale, position, offset);\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    const me = this;\r\n    me.options = options.setContext(me.getContext());\r\n    me.axis = options.axis;\r\n    me._userMin = me.parse(options.min);\r\n    me._userMax = me.parse(options.max);\r\n    me._suggestedMin = me.parse(options.suggestedMin);\r\n    me._suggestedMax = me.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    const me = this;\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(me, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    const me = this;\r\n    return {\r\n      left: me.paddingLeft || 0,\r\n      top: me.paddingTop || 0,\r\n      right: me.paddingRight || 0,\r\n      bottom: me.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    me.beforeUpdate();\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    me.ticks = null;\r\n    me._labelSizes = null;\r\n    me._gridLineItems = null;\r\n    me._labelItems = null;\r\n    me.beforeSetDimensions();\r\n    me.setDimensions();\r\n    me.afterSetDimensions();\r\n    me._maxLength = me.isHorizontal()\r\n      ? me.width + margins.left + margins.right\r\n      : me.height + margins.top + margins.bottom;\r\n    if (!me._dataLimitsCached) {\r\n      me.beforeDataLimits();\r\n      me.determineDataLimits();\r\n      me.afterDataLimits();\r\n      me._range = _addGrace(me, me.options.grace);\r\n      me._dataLimitsCached = true;\r\n    }\r\n    me.beforeBuildTicks();\r\n    me.ticks = me.buildTicks() || [];\r\n    me.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < me.ticks.length;\r\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\r\n    me.configure();\r\n    me.beforeCalculateLabelRotation();\r\n    me.calculateLabelRotation();\r\n    me.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      me.ticks = autoSkip(me, me.ticks);\r\n      me._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      me._convertTicksToLabels(me.ticks);\r\n    }\r\n    me.beforeFit();\r\n    me.fit();\r\n    me.afterFit();\r\n    me.afterUpdate();\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    let reversePixels = me.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (me.isHorizontal()) {\r\n      startPixel = me.left;\r\n      endPixel = me.right;\r\n    } else {\r\n      startPixel = me.top;\r\n      endPixel = me.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    me._startPixel = startPixel;\r\n    me._endPixel = endPixel;\r\n    me._reversePixels = reversePixels;\r\n    me._length = endPixel - startPixel;\r\n    me._alignToPixels = me.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n    me.paddingLeft = 0;\r\n    me.paddingTop = 0;\r\n    me.paddingRight = 0;\r\n    me.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    const me = this;\r\n    me.chart.notifyPlugins(name, me.getContext());\r\n    callback(me.options[name], [me]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\r\n    }\r\n    for (i = 0; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = me.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\r\n      me.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\r\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\r\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    me.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\r\n    const display = me._isVisible();\r\n    const isHorizontal = me.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = me.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = me.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && me.ticks.length) {\r\n        const {first, last, widest, highest} = me._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(me.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        me._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    me._handleMargins();\r\n    if (isHorizontal) {\r\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\r\n      me.height = minSize.height;\r\n    } else {\r\n      me.width = minSize.width;\r\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const me = this;\r\n    const {ticks: {align, padding}, position} = me.options;\r\n    const isRotated = me.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\r\n    if (me.isHorizontal()) {\r\n      const offsetLeft = me.getPixelForTick(0) - me.left;\r\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\r\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      me.paddingTop = paddingTop + padding;\r\n      me.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    const me = this;\r\n    if (me._margins) {\r\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\r\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\r\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\r\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    const me = this;\r\n    me.beforeTickToLabelConversion();\r\n    me.generateTickLabels(ticks);\r\n    me.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    const me = this;\r\n    let labelSizes = me._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = me.options.ticks.sampleSize;\r\n      let ticks = me.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest)\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    const me = this;\r\n    if (me._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = me._startPixel + decimal * me._length;\r\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const me = this;\r\n    const ticks = me.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\r\n    }\r\n    return me.$context ||\r\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\r\n  }\r\n  _tickSize() {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    const rot = toRadians(me.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = me._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return me.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const chart = me.chart;\r\n    const options = me.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(me.getContext(0));\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(me.bottom);\r\n      ty1 = me.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(me.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = me.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(me.right);\r\n      tx1 = me.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(me.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = me.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    for (i = 0; i < ticksLength; ++i) {\r\n      const optsAtIndex = grid.setContext(me.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(me, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    me._ticksLength = ticksLength;\r\n    me._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const options = me.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = me.bottom - hTickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = me.top + hTickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = me._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = me._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\r\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = me._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y]\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const me = this;\r\n    const {position, ticks} = me.options;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const me = this;\r\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\r\n    const labelSizes = me._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        textAlign = 'left';\r\n        x = me.right + padding;\r\n      } else {\r\n        x = me.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = me.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        textAlign = 'right';\r\n        x = me.left + padding;\r\n      } else {\r\n        x = me.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = me.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    const me = this;\r\n    if (me.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = me.chart;\r\n    const position = me.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    if (!me._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = me.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(me.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    const ctx = me.ctx;\r\n    const chart = me.chart;\r\n    const borderOpts = grid.setContext(me.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (axisWidth) {\r\n      const lastLineWidth = borderOpts.lineWidth;\r\n      const borderValue = me._borderValue;\r\n      let x1, x2, y1, y2;\r\n      if (me.isHorizontal()) {\r\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\r\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\r\n        y1 = y2 = borderValue;\r\n      } else {\r\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\r\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\r\n        x1 = x2 = borderValue;\r\n      }\r\n      drawLine(\r\n        {x: x1, y: y1},\r\n        {x: x2, y: y2},\r\n        {width: axisWidth, color: borderOpts.borderColor});\r\n    }\r\n  }\r\n  drawLabels(chartArea) {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = me.ctx;\r\n    const area = me._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom') {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    const me = this;\r\n    if (!me._isVisible()) {\r\n      return;\r\n    }\r\n    me.drawBackground();\r\n    me.drawGrid(chartArea);\r\n    me.drawTitle();\r\n    me.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = opts.grid && opts.grid.z || 0;\r\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw(chartArea) {\r\n          me.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw(chartArea) {\r\n        me.drawBackground();\r\n        me.drawGrid(chartArea);\r\n        me.drawTitle();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw(chartArea) {\r\n        me.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const me = this;\r\n    const metas = me.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = me.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const me = this;\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = me.register(proto);\r\n    }\r\n    const items = me.items;\r\n    const id = item.id;\r\n    const scope = me.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (me.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    const me = this;\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || me._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\r\n        me._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || me._getRegistryForType(item);\r\n          me._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    const me = this;\r\n    if (hook === 'beforeInit') {\r\n      me._init = me._createDescriptors(chart, true);\r\n      me._notify(me._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\r\n    const result = me._notify(descriptors, chart, hook, args);\r\n    if (hook === 'destroy') {\r\n      me._notify(descriptors, chart, 'stop');\r\n      me._notify(me._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = [...scopes];\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.1.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction isDomSupported() {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\nfunction getCanvas(item) {\r\n  if (isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nclass Chart {\r\n  constructor(item, config) {\r\n    const me = this;\r\n    this.config = config = new Config(config);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    this.platform = me._initializePlatform(initialCanvas, config);\r\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this.scale = undefined;\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\r\n    instances[me.id] = me;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(me, 'complete', onAnimationsComplete);\r\n    animator.listen(me, 'progress', onAnimationProgress);\r\n    me._initialize();\r\n    if (me.attached) {\r\n      me.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    const me = this;\r\n    me.notifyPlugins('beforeInit');\r\n    if (me.options.responsive) {\r\n      me.resize();\r\n    } else {\r\n      retinaScale(me, me.options.devicePixelRatio);\r\n    }\r\n    me.bindEvents();\r\n    me.notifyPlugins('afterInit');\r\n    return me;\r\n  }\r\n  _initializePlatform(canvas, config) {\r\n    if (config.platform) {\r\n      return new config.platform();\r\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n      return new BasicPlatform();\r\n    }\r\n    return new DomPlatform();\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const canvas = me.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\r\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const oldRatio = me.currentDevicePixelRatio;\r\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\r\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\r\n      return;\r\n    }\r\n    me.width = newSize.width;\r\n    me.height = newSize.height;\r\n    me._aspectRatio = me.aspectRatio;\r\n    retinaScale(me, newRatio, true);\r\n    me.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [me, newSize], me);\r\n    if (me.attached) {\r\n      if (me._doResize()) {\r\n        me.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = me.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: me.ctx,\r\n          chart: me\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(me, scale, scale.options);\r\n      layouts.addBox(me, scale);\r\n    });\r\n  }\r\n  _updateMetasetIndex(meta, index) {\r\n    const metasets = this._metasets;\r\n    const oldIndex = meta.index;\r\n    if (oldIndex !== index) {\r\n      metasets[oldIndex] = metasets[index];\r\n      metasets[index] = meta;\r\n      meta.index = index;\r\n    }\r\n  }\r\n  _updateMetasets() {\r\n    const me = this;\r\n    const metasets = me._metasets;\r\n    const numData = me.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        me._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const me = this;\r\n    const {_metasets: metasets, data: {datasets}} = me;\r\n    if (metasets.length > datasets.length) {\r\n      delete me._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        me._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const me = this;\r\n    const newControllers = [];\r\n    const datasets = me.data.datasets;\r\n    let i, ilen;\r\n    me._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = me.getDatasetMeta(i);\r\n      const type = dataset.type || me.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        me._destroyDatasetMeta(i);\r\n        meta = me.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\r\n      meta.order = dataset.order || 0;\r\n      me._updateMetasetIndex(meta, i);\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = me.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(me, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    me._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    const me = this;\r\n    each(me.data.datasets, (dataset, datasetIndex) => {\r\n      me.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, me);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const config = me.config;\r\n    config.update();\r\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    each(me.scales, (scale) => {\r\n      layouts.removeBox(me, scale);\r\n    });\r\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\r\n    me.ensureScalesHaveIDs();\r\n    me.buildOrUpdateScales();\r\n    me._plugins.invalidate();\r\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = me.buildOrUpdateControllers();\r\n    me.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = me.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    me._minPadding = minPadding;\r\n    me._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    me._updateDatasets(mode);\r\n    me.notifyPlugins('afterUpdate', {mode});\r\n    me._layers.sort(compare2Level('z', '_idx'));\r\n    if (me._lastEvent) {\r\n      me._eventHandler(me._lastEvent, true);\r\n    }\r\n    me.render();\r\n  }\r\n  _updateLayout(minPadding) {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(me, me.width, me.height, minPadding);\r\n    const area = me.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    me._layers = [];\r\n    each(me.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      me._layers.push(...box._layers());\r\n    }, me);\r\n    me._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    me.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    const me = this;\r\n    const isFunction = typeof mode === 'function';\r\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const me = this;\r\n    const meta = me.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(me)) {\r\n      if (me.attached && !animator.running(me)) {\r\n        animator.start(me);\r\n      }\r\n    } else {\r\n      me.draw();\r\n      onAnimationsComplete({chart: me});\r\n    }\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    let i;\r\n    if (me._resizeBeforeDraw) {\r\n      const {width, height} = me._resizeBeforeDraw;\r\n      me._resize(width, height);\r\n      me._resizeBeforeDraw = null;\r\n    }\r\n    me.clear();\r\n    if (me.width <= 0 || me.height <= 0) {\r\n      return;\r\n    }\r\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = me._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const me = this;\r\n    const metasets = me._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = me.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      me._drawDataset(metasets[i]);\r\n    }\r\n    me.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const clip = meta._clip;\r\n    const area = me.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    clipArea(ctx, {\r\n      left: clip.left === false ? 0 : area.left - clip.left,\r\n      right: clip.right === false ? me.width : area.right + clip.right,\r\n      top: clip.top === false ? 0 : area.top - clip.top,\r\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\r\n    });\r\n    meta.controller.draw();\r\n    unclipArea(ctx);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const dataset = me.data.datasets[datasetIndex];\r\n    const metasets = me._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = metasets[datasetIndex] = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateDatasetVisibility(datasetIndex, visible) {\r\n    const me = this;\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = me.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    me.setDatasetVisibility(datasetIndex, visible);\r\n    anims.update(meta, {visible});\r\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n  }\r\n  hide(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, false);\r\n  }\r\n  show(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const meta = me._metasets && me._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n      delete me._metasets[datasetIndex];\r\n    }\r\n  }\r\n  destroy() {\r\n    const me = this;\r\n    const {canvas, ctx} = me;\r\n    let i, ilen;\r\n    me.stop();\r\n    animator.remove(me);\r\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._destroyDatasetMeta(i);\r\n    }\r\n    me.config.clearCache();\r\n    if (canvas) {\r\n      me.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      me.platform.releaseContext(ctx);\r\n      me.canvas = null;\r\n      me.ctx = null;\r\n    }\r\n    me.notifyPlugins('destroy');\r\n    delete instances[me.id];\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    const platform = me.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(me, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(me, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    let listener = function(e, x, y) {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      me._eventHandler(e);\r\n    };\r\n    each(me.options.events, (type) => _add(type, listener));\r\n    if (me.options.responsive) {\r\n      listener = (width, height) => {\r\n        if (me.canvas) {\r\n          me.resize(width, height);\r\n        }\r\n      };\r\n      let detached;\r\n      const attached = () => {\r\n        _remove('attach', attached);\r\n        me.attached = true;\r\n        me.resize();\r\n        _add('resize', listener);\r\n        _add('detach', detached);\r\n      };\r\n      detached = () => {\r\n        me.attached = false;\r\n        _remove('resize', listener);\r\n        _add('attach', attached);\r\n      };\r\n      if (platform.isAttached(me.canvas)) {\r\n        attached();\r\n      } else {\r\n        detached();\r\n      }\r\n    } else {\r\n      me.attached = true;\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    if (!listeners) {\r\n      return;\r\n    }\r\n    delete me._listeners;\r\n    each(listeners, (listener, type) => {\r\n      me.platform.removeEventListener(me, type, listener);\r\n    });\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const me = this;\r\n    const lastActive = me._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const me = this;\r\n    const hoverOptions = me.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const me = this;\r\n    const args = {event: e, replay, cancelable: true};\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\r\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = me._handleEvent(e, replay);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      me.render();\r\n    }\r\n    return me;\r\n  }\r\n  _handleEvent(e, replay) {\r\n    const me = this;\r\n    const {_active: lastActive = [], options} = me;\r\n    const hoverOptions = options.hover;\r\n    const useFinalPosition = replay;\r\n    let active = [];\r\n    let changed = false;\r\n    let lastEvent = null;\r\n    if (e.type !== 'mouseout') {\r\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\r\n    }\r\n    me._lastEvent = null;\r\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\r\n      callback(options.onHover, [e, active, me], me);\r\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n        callback(options.onClick, [e, active, me], me);\r\n      }\r\n    }\r\n    changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    me._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element) {\r\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element) {\r\n  if (element.fullCircles) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    pathArc(ctx, element);\r\n    for (let i = 0; i < element.fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n  }\r\n  if (!isNaN(element.circumference)) {\r\n    element.endAngle = element.startAngle + element.circumference % TAU;\r\n  }\r\n  pathArc(ctx, element);\r\n  ctx.fill();\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    clipArc(ctx, element);\r\n    element.endAngle = endAngle;\r\n    if (element.endAngle === element.startAngle) {\r\n      element.endAngle += TAU;\r\n      element.fullCircles--;\r\n    }\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element) {\r\n  const {options} = element;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!options.borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = options.borderWidth * 2;\r\n    ctx.lineJoin = 'round';\r\n  } else {\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.lineJoin = 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element);\r\n  }\r\n  pathArc(ctx, element);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius'\r\n    ], useFinalPosition);\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const offset = options.offset || 0;\r\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    me.fullCircles = Math.floor(me.circumference / TAU);\r\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    if (offset && me.circumference < TAU) {\r\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    drawArc(ctx, me);\r\n    drawBorder(ctx, me);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension) {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension) {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && line.segments.length === 1) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\r\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\r\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\r\n      me._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    const me = this;\r\n    me._points = points;\r\n    delete me._segments;\r\n    delete me._path;\r\n    me._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const value = point[property];\r\n    const points = me.points;\r\n    const segments = _boundSegments(me, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const me = this;\r\n    const segments = me.segments;\r\n    const segmentMethod = _getSegmentMethod(me);\r\n    let loop = me._loop;\r\n    start = start || 0;\r\n    count = count || (me.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const me = this;\r\n    const options = me.options || {};\r\n    const points = me.points || [];\r\n    if (!points.length || !options.borderWidth) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    draw(ctx, me, start, count);\r\n    ctx.restore();\r\n    if (me.animated) {\r\n      me._pointsUpdated = false;\r\n      me._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if (me.skip || options.radius < 0.1) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, me.x, me.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction parseBorderSkipped(bar) {\r\n  let edge = bar.options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    return res;\r\n  }\r\n  edge = bar.horizontal\r\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\r\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\r\n  res[edge] = true;\r\n  return res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : Math.max(Math.min(value, max), min);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = parseBorderSkipped(bar);\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = parseBorderSkipped(bar);\r\n  return {\r\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\r\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, outer);\r\n      ctx.clip();\r\n      addRectPath(ctx, inner);\r\n      ctx.fillStyle = options.borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inner);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      if (count <= 4 * availableWidth) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach((segment) => {\r\n    const first = linePoints[segment.start];\r\n    const last = linePoints[segment.end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {chart, scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(chart, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\nfunction getLinesBelow(chart, index) {\r\n  const below = [];\r\n  const metas = chart.getSortedVisibleDatasetMetas();\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (isLineAndNotInHideAnimation(meta)) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (pointValue >= firstValue && pointValue <= lastValue) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[segment.start],\r\n        end: points[segment.end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      interpolatedLineTo(ctx, target, end, property);\r\n    }\r\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n    const loop = lineLoop && targetLoop;\r\n    if (!loop) {\r\n      interpolatedLineTo(ctx, target, start, property);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        source.line.updateControlPoints(area);\r\n        if (options.drawTime === 'beforeDatasetsDraw') {\r\n          drawfill(chart.ctx, source, area);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins;\r\n    me.setDimensions();\r\n    me.buildLabels();\r\n    me.fit();\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const me = this;\r\n    const labelOpts = me.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\r\n    }\r\n    if (me.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    me.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const {options, ctx} = me;\r\n    if (!options.display) {\r\n      me.width = me.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (me.isHorizontal()) {\r\n      width = me.maxWidth;\r\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = me.maxHeight;\r\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\r\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const lineWidths = me.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const columnSizes = me.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let top = 0;\r\n    let col = 0;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        top = 0;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += fontSize + padding;\r\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\r\n      top += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    const me = this;\r\n    if (!me.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n        }\r\n        hitbox.top += me.top + titleHeight + padding;\r\n        hitbox.left = left;\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += me.left + padding;\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    if (me.options.display) {\r\n      const ctx = me.ctx;\r\n      clipArea(ctx, me);\r\n      me._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const me = this;\r\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    me.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: legendItem.textAlign\r\n      });\r\n    };\r\n    const isHorizontal = me.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\r\n        y: me.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: me.left + padding,\r\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(me.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + (fontSize / 2) + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(me.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > me.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > me.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(me.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const ctx = me.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = me.left;\r\n    let maxWidth = me.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...me.lineWidths);\r\n      y = me.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\r\n    } else {\r\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    const me = this;\r\n    let i, hitBox, lh;\r\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n      lh = me.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n          return me.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = me._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, me], me);\r\n      }\r\n      me._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, me], me);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, me], me);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    me.left = 0;\r\n    me.top = 0;\r\n    if (!opts.display) {\r\n      me.width = me.height = me.right = me.bottom = 0;\r\n      return;\r\n    }\r\n    me.width = me.right = maxWidth;\r\n    me.height = me.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    me._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\r\n    if (me.isHorizontal()) {\r\n      me.height = textSize;\r\n    } else {\r\n      me.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + me._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip._chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const radiusAndPadding = cornerRadius + caretPadding;\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= radiusAndPadding;\r\n  } else if (xAlign === 'right') {\r\n    x += radiusAndPadding;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return Object.assign(Object.create(parent), {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._chart = config._chart;\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const me = this;\r\n    const cached = me._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = me._chart;\r\n    const options = me.options.setContext(me.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(me._chart, opts);\r\n    if (opts._cacheable) {\r\n      me._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    const me = this;\r\n    return me.$context ||\r\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\r\n    const title = callbacks.title.apply(me, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const me = this;\r\n    const active = me._active;\r\n    const data = me._chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(me, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\r\n    });\r\n    me.labelColors = labelColors;\r\n    me.labelPointStyles = labelPointStyles;\r\n    me.labelTextColors = labelTextColors;\r\n    me.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    const active = me._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (me.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(me, active, me._eventPosition);\r\n      tooltipItems = me._createItems(options);\r\n      me.title = me.getTitle(tooltipItems, options);\r\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\r\n      me.body = me.getBody(tooltipItems, options);\r\n      me.afterBody = me.getAfterBody(tooltipItems, options);\r\n      me.footer = me.getFooter(tooltipItems, options);\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\r\n      me.xAlign = alignment.xAlign;\r\n      me.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    me._tooltipItems = tooltipItems;\r\n    me.$context = undefined;\r\n    if (properties) {\r\n      me._resolveAnimations().update(me, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {cornerRadius, caretSize} = options;\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + cornerRadius + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - cornerRadius - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const me = this;\r\n    const title = me.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const me = this;\r\n    const labelColors = me.labelColors[i];\r\n    const labelPointStyle = me.labelPointStyles[i];\r\n    const {boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(me, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = me.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const me = this;\r\n    const {body} = me;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(me.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = me.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(me.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const me = this;\r\n    const footer = me.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const radius = options.cornerRadius;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const me = this;\r\n    const chart = me._chart;\r\n    const anims = me.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, me._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        me.xAlign = alignment.xAlign;\r\n        me.yAlign = alignment.yAlign;\r\n        me.width = size.width;\r\n        me.height = size.height;\r\n        me.caretX = position.x;\r\n        me.caretY = position.y;\r\n        me._resolveAnimations().update(me, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    let opacity = me.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    me._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: me.width,\r\n      height: me.height\r\n    };\r\n    const pt = {\r\n      x: me.x,\r\n      y: me.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      me.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      me.drawTitle(pt, ctx, options);\r\n      me.drawBody(pt, ctx, options);\r\n      me.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const me = this;\r\n    const lastActive = me._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me._chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = me._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      me._active = active;\r\n      me._eventPosition = eventPosition;\r\n      me.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const lastActive = me._active || [];\r\n    let changed = false;\r\n    let active = [];\r\n    if (e.type !== 'mouseout') {\r\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n      if (options.reverse) {\r\n        active.reverse();\r\n      }\r\n    }\r\n    const positionChanged = me._positionChanged(active, e);\r\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      me._active = active;\r\n      if (options.enabled || options.external) {\r\n        me._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        me.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({_chart: chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\r\n  ? labels.push(raw) - 1\r\n  : isNaN(raw) ? null : index;\r\nfunction findOrAddLabel(labels, raw, index) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me.getMinMax(true);\r\n    if (me.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = me.getLabels().length - 1;\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const offset = me.options.offset;\r\n    const ticks = [];\r\n    let labels = me.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    me._startValue = me.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const labels = me.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    super.configure();\r\n    if (!me.isHorizontal()) {\r\n      me._reversePixels = !me._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (typeof value !== 'number') {\r\n      value = me.parse(value);\r\n    }\r\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return me.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  niceMin = Math.floor(rmin / spacing) * spacing;\r\n  niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    ticks.push({value: min});\r\n    if (niceMin <= min) {\r\n      j++;\r\n    }\r\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined) {\r\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {beginAtZero, stacked} = me.options;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero || stacked) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      setMax(max + 1);\r\n      if (!beginAtZero) {\r\n        setMin(min - 1);\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\r\n    } else {\r\n      maxTicks = me.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = me.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n    };\r\n    const dataRange = me._range || me;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    let start = me.min;\r\n    let end = me.max;\r\n    super.configure();\r\n    if (me.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    me._startValue = start;\r\n    me._endValue = end;\r\n    me._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? min : 0;\r\n    me.max = isNumberFinite(max) ? max : 1;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      return Math.ceil(me.width / 40);\r\n    }\r\n    const tickFont = me._resolveTickFontOptions(0);\r\n    return Math.ceil(me.height / tickFont.lineHeight);\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (me.options.beginAtZero) {\r\n      me._zero = true;\r\n    }\r\n    me.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let min = me.min;\r\n    let max = me.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const generationOptions = {\r\n      min: me._userMin,\r\n      max: me._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, me);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const start = me.min;\r\n    super.configure();\r\n    me._startValue = log10(start);\r\n    me._valueRange = log10(me.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (value === undefined || value === 0) {\r\n      value = me.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return me.getPixelForDecimal(value === me.min\r\n      ? 0\r\n      : (log10(value) - me._startValue) / me._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const decimal = me.getDecimalForPixel(pixel);\r\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, lineHeight, label) {\r\n  if (isArray(label)) {\r\n    return {\r\n      w: _longestText(ctx, ctx.font, label),\r\n      h: label.length * lineHeight\r\n    };\r\n  }\r\n  return {\r\n    w: ctx.measureText(label).width,\r\n    h: lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const furthestLimits = {\r\n    l: 0,\r\n    r: scale.width,\r\n    t: 0,\r\n    b: scale.height - scale.paddingTop\r\n  };\r\n  const furthestAngles = {};\r\n  let i, textSize, pointPosition;\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale.getLabels().length;\r\n  for (i = 0; i < valueCount; i++) {\r\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\r\n    padding[i] = opts.padding;\r\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n    const plFont = toFont(opts.font);\r\n    scale.ctx.font = plFont.string;\r\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = scale.getIndexAngle(i);\r\n    const angle = toDegrees(angleRadians);\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    if (hLimits.start < furthestLimits.l) {\r\n      furthestLimits.l = hLimits.start;\r\n      furthestAngles.l = angleRadians;\r\n    }\r\n    if (hLimits.end > furthestLimits.r) {\r\n      furthestLimits.r = hLimits.end;\r\n      furthestAngles.r = angleRadians;\r\n    }\r\n    if (vLimits.start < furthestLimits.t) {\r\n      furthestLimits.t = vLimits.start;\r\n      furthestAngles.t = angleRadians;\r\n    }\r\n    if (vLimits.end > furthestLimits.b) {\r\n      furthestLimits.b = vLimits.end;\r\n      furthestAngles.b = angleRadians;\r\n    }\r\n  }\r\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n  scale._pointLabelItems = [];\r\n  const opts = scale.options;\r\n  const tickBackdropHeight = getTickBackdropHeight(opts);\r\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n  for (i = 0; i < valueCount; i++) {\r\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n    const angle = toDegrees(scale.getIndexAngle(i));\r\n    const size = labelSizes[i];\r\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    let left;\r\n    if (textAlign === 'left') {\r\n      left = pointLabelPosition.x;\r\n    } else if (textAlign === 'center') {\r\n      left = pointLabelPosition.x - (size.w / 2);\r\n    } else {\r\n      left = pointLabelPosition.x - size.w;\r\n    }\r\n    const right = left + size.w;\r\n    scale._pointLabelItems[i] = {\r\n      x: pointLabelPosition.x,\r\n      y: pointLabelPosition.y,\r\n      textAlign,\r\n      left,\r\n      top: pointLabelPosition.y,\r\n      right,\r\n      bottom: pointLabelPosition.y + size.h,\r\n    };\r\n  }\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n  if (angle === 90 || angle === 270) {\r\n    position.y -= (textSize.h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    position.y -= textSize.h;\r\n  }\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction numberOrZero(param) {\r\n  return isNumber(param) ? param : 0;\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    me.width = me.maxWidth;\r\n    me.height = me.maxHeight;\r\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\r\n    me.xCenter = Math.floor(me.width / 2);\r\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\r\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(false);\r\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\r\n    me._pointLabels = me.getLabels().map((value, index) => {\r\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\r\n      return label || label === 0 ? label : '';\r\n    });\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(me);\r\n    } else {\r\n      me.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n    const me = this;\r\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n    radiusReductionRight = numberOrZero(radiusReductionRight);\r\n    radiusReductionTop = numberOrZero(radiusReductionTop);\r\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    const me = this;\r\n    const maxRight = me.width - rightMovement - me.drawingArea;\r\n    const maxLeft = leftMovement + me.drawingArea;\r\n    const maxTop = topMovement + me.drawingArea;\r\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\r\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\r\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / this.getLabels().length;\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    const me = this;\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = me.drawingArea / (me.max - me.min);\r\n    if (me.options.reverse) {\r\n      return (me.max - value) * scalingFactor;\r\n    }\r\n    return (value - me.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const me = this;\r\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\r\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\r\n  }\r\n  getPointPosition(index, distanceFromCenter) {\r\n    const me = this;\r\n    const angle = me.getIndexAngle(index) - HALF_PI;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const me = this;\r\n    const {backgroundColor, grid: {circular}} = me.options;\r\n    if (backgroundColor) {\r\n      const ctx = me.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = me.getLabels().length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(me, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      me.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = me.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\r\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\r\n        position = me.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(me.xCenter, me.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawLabels() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = me.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(me.xCenter, me.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    me.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    backdropColor: 'rgba(255,255,255,0.75)',\r\n    backdropPadding: 2,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const options = scale.options.time;\r\n  const {parser, round, isoWeekday} = options;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const adapter = me._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(me._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(me.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    me.min = Math.min(min, max - 1);\r\n    me.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      me.min = me._userMin || timestamps[0];\r\n      me.max = me._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\r\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\r\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\r\n      : determineMajorUnit(me._unit);\r\n    me.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    const me = this;\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (me.options.offset && timestamps.length) {\r\n      first = me.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const timeOpts = me.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = me._unit;\r\n    const majorUnit = me._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    const me = this;\r\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return me.min + pos * (me.max - me.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const me = this;\r\n    const ticksOpts = me.options.ticks;\r\n    const tickLabelWidth = me.ctx.measureText(label).width;\r\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = me._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const me = this;\r\n    const timeOpts = me.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\r\n    const size = me._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    const me = this;\r\n    let timestamps = me._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    if (me._normalized && metas.length) {\r\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\r\n    }\r\n    return (me._cache.data = me.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const me = this;\r\n    const timestamps = me._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = me.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(me, labels[i]));\r\n    }\r\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    prevSource = Math.floor(val);\r\n    nextSource = Math.ceil(val);\r\n    prevTarget = table[prevSource];\r\n    nextTarget = table[nextSource];\r\n  } else {\r\n    const result = _lookup(table, val);\r\n    prevTarget = result.lo;\r\n    nextTarget = result.hi;\r\n    prevSource = table[prevTarget];\r\n    nextSource = table[nextTarget];\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._maxIndex = undefined;\r\n  }\r\n  initOffsets() {\r\n    const me = this;\r\n    const timestamps = me._getTimestampsForTable();\r\n    me._table = me.buildLookupTable(timestamps);\r\n    me._maxIndex = me._table.length - 1;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const me = this;\r\n    const {min, max} = me;\r\n    if (!timestamps.length) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    const items = [min];\r\n    let i, ilen, curr;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr > min && curr < max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    items.push(max);\r\n    return items;\r\n  }\r\n  _getTimestampsForTable() {\r\n    const me = this;\r\n    let timestamps = me._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = me.getDataTimestamps();\r\n    const label = me.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = me.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = me._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\r\n      ? index / me._maxIndex : me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getDecimalForValue(value) {\r\n    return interpolate(this._table, value) / this._maxIndex;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(me._table, decimal * this._maxIndex, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"metadata":{},"sourceType":"module"}