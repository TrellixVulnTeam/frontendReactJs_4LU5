{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { queryApi } from \"../../utils/queryApi\";\nvar initialState = {\n  reviews: [],\n  selectedReview: {},\n  numberrating: 0,\n  errors: \"\"\n};\nvar reviewcourseSlice = createSlice({\n  name: \"reviewscourse\",\n  initialState: initialState,\n  reducers: {\n    populateReviews: function populateReviews(state, action) {\n      state.reviewscourse = action.payload;\n    },\n    populatesumreviews: function populatesumreviews(state, action) {\n      state.numberrating = action.payload;\n    },\n    addReview: function addReview(state, action) {\n      var payload = action.payload;\n      state.reviewscourse.push(payload);\n    },\n    deleteReview: function deleteReview(state, action) {\n      var payload = action.payload;\n      var index = state.reviewscourse.findIndex(function (review) {\n        return review._id === payload;\n      });\n\n      if (index !== -1) {\n        state.reviewscourse.splice(index, 1);\n      }\n    },\n    setErrorsR: function setErrorsR(state, action) {\n      state.errors = action.payload;\n    }\n  }\n});\nexport var fetchReviews = function fetchReviews(idc) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$queryApi, _yield$queryApi2, res, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return queryApi(\"reviewc/\" + idc);\n\n            case 2:\n              _yield$queryApi = _context.sent;\n              _yield$queryApi2 = _slicedToArray(_yield$queryApi, 2);\n              res = _yield$queryApi2[0];\n              error = _yield$queryApi2[1];\n\n              if (error) {\n                console.log(error);\n              } else {\n                dispatch(populateReviews(res));\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchsumrating = function fetchsumrating(idc) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$queryApi3, _yield$queryApi4, res, error;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return queryApi(\"reviewc/average/\" + idc);\n\n            case 2:\n              _yield$queryApi3 = _context2.sent;\n              _yield$queryApi4 = _slicedToArray(_yield$queryApi3, 2);\n              res = _yield$queryApi4[0];\n              error = _yield$queryApi4[1];\n\n              if (error) {\n                console.log(error);\n              } else {\n                dispatch(populatesumreviews(res));\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var selectReviewsCourse = function selectReviewsCourse(state) {\n  return [state.reviewscourse.reviewscourse, state.reviewscourse.errors];\n};\nexport var selectsumreviews = function selectsumreviews(state) {\n  return [state.reviewscourse.numberrating, state.reviewscourse.errors];\n};\nvar _reviewcourseSlice$ac = reviewcourseSlice.actions,\n    populatesumreviews = _reviewcourseSlice$ac.populatesumreviews,\n    populateReviews = _reviewcourseSlice$ac.populateReviews,\n    addReview = _reviewcourseSlice$ac.addReview,\n    setErrorsR = _reviewcourseSlice$ac.setErrorsR,\n    deleteReview = _reviewcourseSlice$ac.deleteReview;\nexport { populatesumreviews, populateReviews, addReview, setErrorsR, deleteReview };\nexport default reviewcourseSlice.reducer;","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/redux/slices/reviewscourseSlice.js"],"names":["createSlice","queryApi","initialState","reviews","selectedReview","numberrating","errors","reviewcourseSlice","name","reducers","populateReviews","state","action","reviewscourse","payload","populatesumreviews","addReview","push","deleteReview","index","findIndex","review","_id","splice","setErrorsR","fetchReviews","idc","dispatch","res","error","console","log","fetchsumrating","selectReviewsCourse","selectsumreviews","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { queryApi } from \"../../utils/queryApi\";\r\nlet initialState = {\r\n    reviews: [],\r\n    selectedReview: {},\r\n    numberrating:0,\r\n    errors: \"\",\r\n    };\r\nconst reviewcourseSlice=createSlice({\r\n    name: \"reviewscourse\",\r\n    initialState,\r\n    reducers: {\r\n        populateReviews(state, action) {\r\n        state.reviewscourse = action.payload;\r\n        },\r\n        populatesumreviews(state, action) {\r\n            state.numberrating = action.payload;\r\n            },\r\n       \r\n        addReview: (state, action) => {\r\n            const payload = action.payload;\r\n            state.reviewscourse.push(payload);\r\n           \r\n            },\r\n        deleteReview: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.reviewscourse.findIndex((review) => review._id === payload);\r\n            if (index !== -1) {\r\n                state.reviewscourse.splice(index, 1);\r\n                               }\r\n       },\r\n\r\n     \r\n         setErrorsR(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n\r\nexport const fetchReviews=(idc)=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"reviewc/\"+idc);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(populateReviews(res));\r\n    }\r\n}\r\n\r\n\r\nexport const fetchsumrating=(idc)=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"reviewc/average/\"+idc);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(populatesumreviews(res));\r\n    }\r\n}\r\n\r\n\r\nexport const selectReviewsCourse=(state)=>{\r\n    return [state.reviewscourse.reviewscourse,state.reviewscourse.errors];\r\n}\r\n\r\nexport const selectsumreviews=(state)=>{\r\n    return [state.reviewscourse.numberrating,state.reviewscourse.errors];\r\n}\r\nexport const {populatesumreviews,populateReviews,addReview,setErrorsR,deleteReview}=reviewcourseSlice.actions;\r\nexport default reviewcourseSlice.reducer;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}