{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nlet initialState = {\n  educations: [],\n  selectedEducation: {},\n  errors: \"\"\n};\nconst educationsSlice = createSlice({\n  name: \"educations\",\n  initialState,\n  reducers: {\n    populateEducations(state, action) {\n      state.educations = action.payload;\n    },\n\n    selectEducation(state, action) {\n      state.populateEducations = action.payload;\n    },\n\n    addEducation: (state, action) => {\n      const payload = action.payload;\n      state.educations.push(payload);\n    },\n    deleteEducation: (state, action) => {\n      const payload = action.payload;\n      const index = state.educations.findIndex(education => education._id === payload);\n\n      if (index !== -1) {\n        state.educations.splice(index, 1);\n      }\n    },\n    updateEducation: (state, action) => {\n      const payload = action.payload;\n      state.educations.set(payload);\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    }\n\n  }\n});\nexport const fetchEducations = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"appliation/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n  axios.get(`/education/getAll`, config).then(response => {\n    dispatch(populateEducations(response.data));\n    console.log(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const selectEducations = state => {\n  return [state.educations.educations, state.educations.errors];\n};\nexport const {\n  populateEducations,\n  addEducation,\n  setErrors,\n  deleteEducation,\n  selectEducation,\n  updateEducation\n} = educationsSlice.actions;\nexport default educationsSlice.reducer;","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/slices/educationSlice.js"],"names":["createSlice","axios","initialState","educations","selectedEducation","errors","educationsSlice","name","reducers","populateEducations","state","action","payload","selectEducation","addEducation","push","deleteEducation","index","findIndex","education","_id","splice","updateEducation","set","setErrors","fetchEducations","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","selectEducations","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    educations: [],\r\n    selectedEducation: {},\r\n    errors: \"\",\r\n    };\r\nconst educationsSlice=createSlice({\r\n    name: \"educations\",\r\n    initialState,\r\n    reducers: {\r\n        populateEducations(state, action) {\r\n        state.educations = action.payload;\r\n        },\r\n        selectEducation(state, action) {\r\n            state.populateEducations = action.payload;\r\n            },\r\n        addEducation: (state, action) => {\r\n            const payload = action.payload;\r\n            state.educations.push(payload);\r\n            },\r\n        deleteEducation: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.educations.findIndex((education) => education._id === payload);\r\n            if (index !== -1) {\r\n                state.educations.splice(index, 1);\r\n                               }\r\n       },\r\n       updateEducation: (state, action) => {\r\n        const payload = action.payload;\r\n        state.educations.set(payload);\r\n                           },\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchEducations=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`/education/getAll`, config)\r\n                .then((response) => {\r\n                 dispatch(populateEducations(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const selectEducations=(state)=>{\r\n    return [state.educations.educations,state.educations.errors];\r\n}\r\nexport const {populateEducations,addEducation,setErrors,deleteEducation,selectEducation,updateEducation}=educationsSlice.actions;\r\nexport default educationsSlice.reducer;"]},"metadata":{},"sourceType":"module"}