{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nvar initialState = {\n  notifications: [],\n  selectedNotification: {},\n  errors: \"\"\n};\nvar notificationsSlice = createSlice({\n  name: \"notifications\",\n  initialState: initialState,\n  reducers: {\n    populateNotifications: function populateNotifications(state, action) {\n      state.notifications = action.payload;\n    },\n    selectNotification: function selectNotification(state, action) {\n      state.populateNotifications = action.payload;\n    },\n    addNotification: function addNotification(state, action) {\n      var payload = action.payload;\n      state.notifications.push(payload);\n    },\n    deleteNotification: function deleteNotification(state, action) {\n      var payload = action.payload;\n      var index = state.notifications.findIndex(function (notification) {\n        return notification._id === payload;\n      });\n\n      if (index !== -1) {\n        state.notifications.splice(index, 1);\n      }\n    },\n    setErrors: function setErrors(state, action) {\n      state.errors = action.payload;\n    }\n  }\n});\nexport var fetchNotifications = function fetchNotifications() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"appliation/json\",\n                  Authorization: \"Bearer \".concat(localStorage.getItem(\"authToken\"))\n                }\n              };\n              axios.get(\"https://aaweni.herokuapp.com/notif/getNotif\", config).then(function (response) {\n                dispatch(populateNotifications(response.data));\n                console.log(response.data);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var selectNotifications = function selectNotifications(state) {\n  return [state.notifications.notifications, state.notifications.errors];\n};\nvar _notificationsSlice$a = notificationsSlice.actions,\n    populateNotifications = _notificationsSlice$a.populateNotifications,\n    addNotification = _notificationsSlice$a.addNotification,\n    setErrors = _notificationsSlice$a.setErrors,\n    deleteNotification = _notificationsSlice$a.deleteNotification,\n    selectNotification = _notificationsSlice$a.selectNotification;\nexport { populateNotifications, addNotification, setErrors, deleteNotification, selectNotification };\nexport default notificationsSlice.reducer;","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/redux/slices/notificationSlice.js"],"names":["createSlice","axios","initialState","notifications","selectedNotification","errors","notificationsSlice","name","reducers","populateNotifications","state","action","payload","selectNotification","addNotification","push","deleteNotification","index","findIndex","notification","_id","splice","setErrors","fetchNotifications","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","selectNotifications","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    notifications: [],\r\n    selectedNotification: {},\r\n    errors: \"\",\r\n    };\r\nconst notificationsSlice=createSlice({\r\n    name: \"notifications\",\r\n    initialState,\r\n    reducers: {\r\n        populateNotifications(state, action) {\r\n        state.notifications = action.payload;\r\n        },\r\n        selectNotification(state, action) {\r\n            state.populateNotifications = action.payload;\r\n            },\r\n        addNotification: (state, action) => {\r\n            const payload = action.payload;\r\n            state.notifications.push(payload);\r\n            },\r\n        deleteNotification: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.notifications.findIndex((notification) => notification._id === payload);\r\n            if (index !== -1) {\r\n                state.notifications.splice(index, 1);\r\n                               }\r\n       },\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchNotifications=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`https://aaweni.herokuapp.com/notif/getNotif`, config)\r\n                .then((response) => {\r\n                 dispatch(populateNotifications(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\n\r\n\r\nexport const selectNotifications=(state)=>{\r\n    return [state.notifications.notifications,state.notifications.errors];\r\n}\r\nexport const {populateNotifications,addNotification,setErrors,deleteNotification,selectNotification}=notificationsSlice.actions;\r\nexport default notificationsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}