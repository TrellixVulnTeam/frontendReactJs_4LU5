{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nvar initialState = {\n  cvs: [],\n  selectedCv: {},\n  errors: \"\"\n};\nvar cvsSlice = createSlice({\n  name: \"cvs\",\n  initialState: initialState,\n  reducers: {\n    populateCvs: function populateCvs(state, action) {\n      state.cvs = action.payload;\n    },\n    selectCv: function selectCv(state, action) {\n      state.populateCvs = action.payload;\n    },\n    addCv: function addCv(state, action) {\n      var payload = action.payload;\n      state.cvs.push(payload);\n    },\n    deleteCv: function deleteCv(state, action) {\n      var payload = action.payload;\n      var index = state.cvs.findIndex(function (cv) {\n        return cv._id === payload;\n      });\n\n      if (index !== -1) {\n        state.cvs.splice(index, 1);\n      }\n    },\n    updateCv: function updateCv(state, action) {\n      var payload = action.payload;\n      state.cvs.set(payload);\n    },\n    setErrors: function setErrors(state, action) {\n      state.errors = action.payload;\n    }\n  }\n});\nexport var fetchCvs = function fetchCvs() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"appliation/json\",\n                  Authorization: \"Bearer \".concat(localStorage.getItem(\"authToken\"))\n                }\n              };\n              axios.get(\"https://aaweni.herokuapp.com/cv/getAll\", config).then(function (response) {\n                dispatch(populateCvs(response.data));\n                console.log(response.data);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var selectCvs = function selectCvs(state) {\n  return [state.cvs.cvs, state.cvs.errors];\n};\nvar _cvsSlice$actions = cvsSlice.actions,\n    populateCvs = _cvsSlice$actions.populateCvs,\n    addCv = _cvsSlice$actions.addCv,\n    setErrors = _cvsSlice$actions.setErrors,\n    deleteCv = _cvsSlice$actions.deleteCv,\n    selectCv = _cvsSlice$actions.selectCv,\n    updateCv = _cvsSlice$actions.updateCv;\nexport { populateCvs, addCv, setErrors, deleteCv, selectCv, updateCv };\nexport default cvsSlice.reducer;","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/redux/slices/cvSlice.js"],"names":["createSlice","axios","initialState","cvs","selectedCv","errors","cvsSlice","name","reducers","populateCvs","state","action","payload","selectCv","addCv","push","deleteCv","index","findIndex","cv","_id","splice","updateCv","set","setErrors","fetchCvs","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","selectCvs","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    cvs: [],\r\n    selectedCv: {},\r\n    errors: \"\",\r\n    };\r\nconst cvsSlice=createSlice({\r\n    name: \"cvs\",\r\n    initialState,\r\n    reducers: {\r\n        populateCvs(state, action) {\r\n        state.cvs = action.payload;\r\n        },\r\n        selectCv(state, action) {\r\n            state.populateCvs = action.payload;\r\n            },\r\n        addCv: (state, action) => {\r\n            const payload = action.payload;\r\n            state.cvs.push(payload);\r\n            },\r\n        deleteCv: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.cvs.findIndex((cv) => cv._id === payload);\r\n            if (index !== -1) {\r\n                state.cvs.splice(index, 1);\r\n                               }\r\n       },\r\n       updateCv: (state, action) => {\r\n        const payload = action.payload;\r\n        state.cvs.set(payload);\r\n                           },\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchCvs=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`https://aaweni.herokuapp.com/cv/getAll`, config)\r\n                .then((response) => {\r\n                 dispatch(populateCvs(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const selectCvs=(state)=>{\r\n    return [state.cvs.cvs,state.cvs.errors];\r\n}\r\nexport const {populateCvs,addCv,setErrors,deleteCv,selectCv,updateCv}=cvsSlice.actions;\r\nexport default cvsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}