{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nlet initialState = {\n  pages: [],\n  selectedPage: {},\n  errors: \"\"\n};\nconst pagesSlice = createSlice({\n  name: \"pages\",\n  initialState,\n  reducers: {\n    populatePages(state, action) {\n      state.pages = action.payload;\n    },\n\n    selectPage(state, action) {\n      state.populatePages = action.payload;\n    },\n\n    addPage: (state, action) => {\n      const payload = action.payload;\n      state.pages.push(payload);\n    },\n    deletePage: (state, action) => {\n      const payload = action.payload;\n      const index = state.pages.findIndex(page => page._id === payload);\n\n      if (index !== -1) {\n        state.pages.splice(index, 1);\n      }\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    }\n\n  }\n});\nexport const fetchPages = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"appliation/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n  axios.get(`/page/Allpages`, config).then(response => {\n    dispatch(populatePages(response.data));\n    console.log(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const filter = category => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"appliation/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n  axios.get(`/page/getPagesByCategory/${category}`, config).then(response => {\n    dispatch(populatePages(response.data));\n    console.log(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const selectPages = state => {\n  return [state.pages.pages, state.pages.errors];\n};\nexport const {\n  populatePages,\n  addPage,\n  setErrors,\n  deletePage,\n  selectPage\n} = pagesSlice.actions;\nexport default pagesSlice.reducer;","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/slices/pagesSlice.js"],"names":["createSlice","axios","initialState","pages","selectedPage","errors","pagesSlice","name","reducers","populatePages","state","action","payload","selectPage","addPage","push","deletePage","index","findIndex","page","_id","splice","setErrors","fetchPages","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","filter","category","selectPages","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    pages: [],\r\n    selectedPage: {},\r\n    errors: \"\",\r\n    };\r\nconst pagesSlice=createSlice({\r\n    name: \"pages\",\r\n    initialState,\r\n    reducers: {\r\n        populatePages(state, action) {\r\n        state.pages = action.payload;\r\n        },\r\n        selectPage(state, action) {\r\n            state.populatePages = action.payload;\r\n            },\r\n        addPage: (state, action) => {\r\n            const payload = action.payload;\r\n            state.pages.push(payload);\r\n            },\r\n        deletePage: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.pages.findIndex((page) => page._id === payload);\r\n            if (index !== -1) {\r\n                state.pages.splice(index, 1);\r\n                               }\r\n       },\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchPages=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`/page/Allpages`, config)\r\n                .then((response) => {\r\n                 dispatch(populatePages(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\nexport const filter=(category)=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n\r\n    axios.get(`/page/getPagesByCategory/${category}`, config)\r\n    .then((response) => {\r\n    dispatch(populatePages(response.data));\r\n     console.log(response.data)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const selectPages=(state)=>{\r\n    return [state.pages.pages,state.pages.errors];\r\n}\r\nexport const {populatePages,addPage,setErrors,deletePage,selectPage}=pagesSlice.actions;\r\nexport default pagesSlice.reducer;"]},"metadata":{},"sourceType":"module"}