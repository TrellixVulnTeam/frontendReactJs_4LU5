{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siwar\\\\Desktop\\\\front\\\\src\\\\user\\\\components\\\\routing\\\\PrivateRoute.js\";\n\n/*import React from 'react'\r\nimport {Switch , Route} from 'react-router-dom'\r\nimport NotFound from '../utils/NotFound/NotFound'\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/RegisterScreen';\r\nimport ForgotPasswordScreen from '../screens/ForgotPasswordScreen';\r\nimport ResetPasswordScreen from '../screens/ResetPasswordScreen';\r\nimport { LinkedInPopUp } from 'react-linkedin-login-oauth2';\r\nimport LinkedInScreen from '../screens/LinkedInScreen';\r\nimport ProfileScreen from '../screens/profile/ProfileScreen';\r\nimport PagesScreen from '../screens/pages/PagesScreen';\r\nimport MyPagesScreen from '../screens/pages/MyPagesScreen';\r\nimport CreatePageScreen from '../screens/pages/CreatePageScreen';\r\n\r\nimport { useSelector} from 'react-redux'\r\n\r\nfunction PrivateRoute() {\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const {isLogged,isAdmin} = auth\r\n    \r\n    return (\r\n       <section>\r\n           <Switch>\r\n\r\n\r\n                <Route exact path=\"/login\" component={isLogged ? NotFound :LoginScreen}/>\r\n                <Route exact path=\"/register\" component={isLogged ? NotFound : RegisterScreen}/>\r\n                <Route exact path=\"/forgotpassword\" component={isLogged ? NotFound : ForgotPasswordScreen}/>\r\n                <Route exact path=\"/api/auth/resetpassword/:token\" component={isLogged ? NotFound : ResetPasswordScreen}/>\r\n                <Route exact path=\"/linkedin\" component={LinkedInPopUp} />\r\n                <Route path=\"/LinkedInScreen\" component={LinkedInScreen} />\r\n                <Route exact path=\"/profile\" component={isLogged ? NotFound : ProfileScreen}/>\r\n                <Route exact path=\"/pages\" component={isLogged ? NotFound : PagesScreen}/> \r\n                <Route exact path=\"/mypages\" component={isLogged ? NotFound : MyPagesScreen}/> \r\n                <Route exact path=\"/createpage\" component={isLogged ? NotFound : CreatePageScreen}/> \r\n           </Switch>\r\n       </section>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute*/\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => localStorage.getItem(\"authToken\") ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/user/components/routing/PrivateRoute.js"],"names":["Redirect","Route","PrivateRoute","component","Component","rest","props","localStorage","getItem"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAAQA,QAAR,EAAiBC,KAAjB,QAA6B,kBAA7B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD,sBACI,QAAC,KAAD,OACIA,IADJ;AAEA,IAAA,MAAM,EAAGC,KAAD,IACAC,YAAY,CAACC,OAAb,CAAqB,WAArB,iBACI,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,gBAGI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAMJ,Y;AAeN,eAAeA,YAAf","sourcesContent":["/*import React from 'react'\r\nimport {Switch , Route} from 'react-router-dom'\r\nimport NotFound from '../utils/NotFound/NotFound'\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/RegisterScreen';\r\nimport ForgotPasswordScreen from '../screens/ForgotPasswordScreen';\r\nimport ResetPasswordScreen from '../screens/ResetPasswordScreen';\r\nimport { LinkedInPopUp } from 'react-linkedin-login-oauth2';\r\nimport LinkedInScreen from '../screens/LinkedInScreen';\r\nimport ProfileScreen from '../screens/profile/ProfileScreen';\r\nimport PagesScreen from '../screens/pages/PagesScreen';\r\nimport MyPagesScreen from '../screens/pages/MyPagesScreen';\r\nimport CreatePageScreen from '../screens/pages/CreatePageScreen';\r\n\r\nimport { useSelector} from 'react-redux'\r\n\r\nfunction PrivateRoute() {\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const {isLogged,isAdmin} = auth\r\n    \r\n    return (\r\n       <section>\r\n           <Switch>\r\n\r\n\r\n                <Route exact path=\"/login\" component={isLogged ? NotFound :LoginScreen}/>\r\n                <Route exact path=\"/register\" component={isLogged ? NotFound : RegisterScreen}/>\r\n                <Route exact path=\"/forgotpassword\" component={isLogged ? NotFound : ForgotPasswordScreen}/>\r\n                <Route exact path=\"/api/auth/resetpassword/:token\" component={isLogged ? NotFound : ResetPasswordScreen}/>\r\n                <Route exact path=\"/linkedin\" component={LinkedInPopUp} />\r\n                <Route path=\"/LinkedInScreen\" component={LinkedInScreen} />\r\n                <Route exact path=\"/profile\" component={isLogged ? NotFound : ProfileScreen}/>\r\n                <Route exact path=\"/pages\" component={isLogged ? NotFound : PagesScreen}/> \r\n                <Route exact path=\"/mypages\" component={isLogged ? NotFound : MyPagesScreen}/> \r\n                <Route exact path=\"/createpage\" component={isLogged ? NotFound : CreatePageScreen}/> \r\n           </Switch>\r\n       </section>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute*/\r\n\r\n\r\n\r\nimport {Redirect,Route} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={(props) => \r\n                localStorage.getItem(\"authToken\") ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\"/>\r\n                )\r\n        }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n"]},"metadata":{},"sourceType":"module"}