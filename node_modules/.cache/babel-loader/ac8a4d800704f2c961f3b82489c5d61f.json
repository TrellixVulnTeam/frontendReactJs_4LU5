{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaki\\\\OneDrive\\\\Desktop\\\\aymenouerghui\\\\frontendReactJs\\\\src\\\\user\\\\components\\\\Post\\\\FormInputComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormInputComment(_ref) {\n  _s();\n\n  var id = _ref.id,\n      socket = _ref.socket,\n      setreply = _ref.setreply,\n      send = _ref.send,\n      name = _ref.name;\n  var userconnected = localStorage.getItem(\"connecteduser\");\n  var contentRef = useRef();\n  var bouton = useRef();\n  useEffect(function () {\n    if (name) {\n      contentRef.current.value = \"@\" + name;\n    }\n  }, [name]);\n\n  var commentSubmit = function commentSubmit() {\n    var username = userconnected;\n    var description = contentRef.current.value;\n    if (!username.trim()) return alert(\"not Empty\");\n    var createdAt = new Date().toISOString();\n    socket.emit(\"createComment\", {\n      username: username,\n      description: description,\n      post_id: id,\n      createdAt: createdAt,\n      send: send\n    });\n    contentRef.current.value = \"\";\n    if (setreply) setreply(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bg-gray-100 rounded-full relative dark:bg-gray-800 border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add your Comment..\",\n        class: \"bg-transparent max-h-10 shadow-none px-5\",\n        ref: contentRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: bouton,\n      onClick: commentSubmit,\n      style: {\n        marginLeft: \"490px\",\n        marginTop: \"-58px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"send\",\n        style: {\n          color: 'blue'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormInputComment, \"LLSe7vKt62L8bkqdcu9ozeTl1fc=\");\n\n_c = FormInputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInputComment\");","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/user/components/Post/FormInputComment.js"],"names":["React","useEffect","useRef","FormInputComment","id","socket","setreply","send","name","userconnected","localStorage","getItem","contentRef","bouton","current","value","commentSubmit","username","description","trim","alert","createdAt","Date","toISOString","emit","post_id","marginLeft","marginTop","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAEA,eAAe,SAASC,gBAAT,OAAgE;AAAA;;AAAA,MAApCC,EAAoC,QAApCA,EAAoC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC7E,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB;AACA,MAAMC,UAAU,GAAGV,MAAM,EAAzB;AACA,MAAMW,MAAM,GAAGX,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,IAAJ,EAAU;AACRI,MAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB,GAA2B,MAAMP,IAAjC;AACD;AACF,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;;AAMA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,QAAQ,GAAGR,aAAjB;AACA,QAAMS,WAAW,GAAGN,UAAU,CAACE,OAAX,CAAmBC,KAAvC;AACA,QAAI,CAACE,QAAQ,CAACE,IAAT,EAAL,EAAsB,OAAOC,KAAK,CAAC,WAAD,CAAZ;AAEtB,QAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AACAlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,eAAZ,EAA6B;AAC3BP,MAAAA,QAAQ,EAARA,QAD2B;AAE3BC,MAAAA,WAAW,EAAXA,WAF2B;AAG3BO,MAAAA,OAAO,EAAErB,EAHkB;AAI3BiB,MAAAA,SAAS,EAATA,SAJ2B;AAK3Bd,MAAAA,IAAI,EAAJA;AAL2B,KAA7B;AAOAK,IAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB,GAA2B,EAA3B;AACA,QAAIT,QAAJ,EAAcA,QAAQ,CAAC,KAAD,CAAR;AACf,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,6DAAX;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,oBADd;AAEE,QAAA,KAAK,EAAC,0CAFR;AAGE,QAAA,GAAG,EAAEM;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAQ,MAAA,GAAG,EAAEC,MAAb;AAAqB,MAAA,OAAO,EAAEG,aAA9B;AAA6C,MAAA,KAAK,EAAE;AAACU,QAAAA,UAAU,EAAC,OAAZ;AAAuBC,QAAAA,SAAS,EAAC;AAAjC,OAApD;AAAA,6BACA;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP;AAA7B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3CuBzB,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nexport default function FormInputComment({ id, socket, setreply, send, name }) {\r\n  const userconnected = localStorage.getItem(\"connecteduser\");\r\n  const contentRef = useRef();\r\n  const bouton = useRef();\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      contentRef.current.value = \"@\" + name;\r\n    }\r\n  }, [name]);\r\n\r\n  const commentSubmit = () => {\r\n    const username = userconnected;\r\n    const description = contentRef.current.value;\r\n    if (!username.trim()) return alert(\"not Empty\");\r\n\r\n    const createdAt = new Date().toISOString();\r\n    socket.emit(\"createComment\", {\r\n      username,\r\n      description,\r\n      post_id: id,\r\n      createdAt,\r\n      send,\r\n    });\r\n    contentRef.current.value = \"\";\r\n    if (setreply) setreply(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"bg-gray-100 rounded-full relative dark:bg-gray-800 border-t\">\r\n        <input\r\n          placeholder=\"Add your Comment..\"\r\n          class=\"bg-transparent max-h-10 shadow-none px-5\"\r\n          ref={contentRef}\r\n        ></input>\r\n        \r\n      </div>\r\n      <button ref={bouton} onClick={commentSubmit} style={{marginLeft:\"490px\"  , marginTop:\"-58px\"}}>\r\n      <ion-icon name=\"send\" style={{color:'blue' }} ></ion-icon>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}