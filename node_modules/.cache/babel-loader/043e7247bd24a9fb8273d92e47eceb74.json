{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { queryApi } from \"../../utils/queryApi\";\nlet initialState = {\n  favoris: [],\n  selectedFavoris: [],\n  errors: \"\"\n};\nconst favorisSlice = createSlice({\n  name: \"favoris\",\n  initialState,\n  reducers: {\n    populateFavoris(state, action) {\n      state.favoris = action.payload;\n    },\n\n    selectFavoris(state, action) {\n      state.populateFavoris = action.payload;\n    },\n\n    addfavoris: (state, action) => {\n      const payload = action.payload;\n      state.favoris.push(payload);\n    },\n    deleteFavoris: (state, action) => {\n      const payload = action.payload;\n      const index = state.favoris.findIndex(fav => fav._id === payload);\n\n      if (index !== -1) {\n        state.favoris.splice(index, 1);\n      }\n    },\n\n    setErrorsf(state, action) {\n      state.errors = action.payload;\n    }\n\n  }\n});\nexport const fetchFavoris = () => async dispatch => {\n  const [res, error] = await queryApi(\"favoris/displayf\");\n\n  if (error) {\n    console.log(error);\n  } else {\n    dispatch(populateFavoris(res));\n  }\n};\nexport const selectFavoris = state => {\n  return [state.favoris.favoris, state.favoris.errors];\n};\nexport const {\n  populateFavoris,\n  addfavoris,\n  setErrorsf,\n  deleteFavoris\n} = favorisSlice.actions;\nexport default favorisSlice.reducer;","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/slices/favorisSlice.js"],"names":["createSlice","queryApi","initialState","favoris","selectedFavoris","errors","favorisSlice","name","reducers","populateFavoris","state","action","payload","selectFavoris","addfavoris","push","deleteFavoris","index","findIndex","fav","_id","splice","setErrorsf","fetchFavoris","dispatch","res","error","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,EADM;AAGfC,EAAAA,eAAe,EAAC,EAHD;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;AAMA,MAAMC,YAAY,GAACN,WAAW,CAAC;AAC3BO,EAAAA,IAAI,EAAE,SADqB;AAE3BL,EAAAA,YAF2B;AAG3BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAE/BD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACC,KAJK;;AAMNC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAEzBD,MAAAA,KAAK,CAACD,eAAN,GAAwBE,MAAM,CAACC,OAA/B;AACC,KATC;;AAYNE,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACP,OAAN,CAAcY,IAAd,CAAmBH,OAAnB;AAGC,KAjBC;AAmBNI,IAAAA,aAAa,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAE9B,YAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACA,YAAMK,KAAK,GAAGP,KAAK,CAACP,OAAN,CAAce,SAAd,CAAyBC,GAAD,IAASA,GAAG,CAACC,GAAJ,KAAYR,OAA7C,CAAd;;AAEA,UAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdP,QAAAA,KAAK,CAACP,OAAN,CAAckB,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;AACF;AAEN,KA5BM;;AAgCPK,IAAAA,UAAU,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAChBD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACN;;AAlCG;AAHiB,CAAD,CAA9B;AA2CA,OAAO,MAAMW,YAAY,GAAC,MAAI,MAAMC,QAAN,IAAiB;AAC3C,QAAM,CAACC,GAAD,EAAKC,KAAL,IAAY,MAAMzB,QAAQ,CAAC,kBAAD,CAAhC;;AACA,MAAGyB,KAAH,EAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAFD,MAGI;AACAF,IAAAA,QAAQ,CAACf,eAAe,CAACgB,GAAD,CAAhB,CAAR;AACH;AACJ,CARM;AAeP,OAAO,MAAMZ,aAAa,GAAEH,KAAD,IAAS;AAChC,SAAO,CAACA,KAAK,CAACP,OAAN,CAAcA,OAAf,EAAuBO,KAAK,CAACP,OAAN,CAAcE,MAArC,CAAP;AACH,CAFM;AAKP,OAAO,MAAM;AAACI,EAAAA,eAAD;AAAiBK,EAAAA,UAAjB;AAA4BQ,EAAAA,UAA5B;AAAuCN,EAAAA;AAAvC,IAAsDV,YAAY,CAACuB,OAAzE;AACP,eAAevB,YAAY,CAACwB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { queryApi } from \"../../utils/queryApi\";\r\nlet initialState = {\r\n    favoris: [],\r\n  \r\n    selectedFavoris:[],\r\n    errors: \"\",\r\n    };\r\nconst favorisSlice=createSlice({\r\n    name: \"favoris\",\r\n    initialState,\r\n    reducers: {\r\n        populateFavoris(state, action) {\r\n     \r\n        state.favoris = action.payload;\r\n        },\r\n   \r\n        selectFavoris(state, action) {\r\n       \r\n            state.populateFavoris = action.payload;\r\n            },\r\n           \r\n            \r\n        addfavoris: (state, action) => {\r\n            const payload = action.payload;\r\n            state.favoris.push(payload);\r\n          \r\n            \r\n            },\r\n      \r\n        deleteFavoris: (state, action) => {\r\n           \r\n            const payload = action.payload;\r\n            const index = state.favoris.findIndex((fav) => fav._id === payload);\r\n       \r\n            if (index !== -1) {\r\n                state.favoris.splice(index, 1);\r\n             }\r\n             \r\n       },\r\n    \r\n      \r\n    \r\n       setErrorsf(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n\r\nexport const fetchFavoris=()=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"favoris/displayf\");\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(populateFavoris(res));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const selectFavoris=(state)=>{\r\n    return [state.favoris.favoris,state.favoris.errors];\r\n}\r\n\r\n\r\nexport const {populateFavoris,addfavoris,setErrorsf,deleteFavoris}=favorisSlice.actions;\r\nexport default favorisSlice.reducer;"]},"metadata":{},"sourceType":"module"}