{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chaki\\\\OneDrive\\\\Desktop\\\\aymenouerghui\\\\frontendReactJs\\\\src\\\\user\\\\components\\\\screens\\\\ResetPasswordScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport \"./screen.css\";\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { store } from 'react-notifications-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  _s();\n\n  var history = _ref.history,\n      match = _ref.match;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      success = _useState6[0],\n      setSuccess = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var resetPasswordHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              config = {\n                header: {\n                  \"Content-Type\": \"appliation/json\"\n                }\n              };\n\n              if (!(password !== confirmPassword)) {\n                _context.next = 7;\n                break;\n              }\n\n              setPassword(\"\");\n              setConfirmPassword(\"\");\n              setTimeout(function () {\n                setError(\"\");\n              }, 5000);\n              return _context.abrupt(\"return\", setError(\"Passwords do not match\"));\n\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return axios.post(\"https://aaweni.herokuapp.com/api/auth/resetpassword/\".concat(match.params.token), {\n                password: password\n              }, config);\n\n            case 10:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              console.log(data);\n              setSuccess(data.data);\n              store.addNotification({\n                title: \"Succeeded\",\n                message: \"Your password has been changed with success\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 3000,\n                  onScreen: true\n                }\n              });\n              window.location.href = \"https://3aweni.netlify.app/login\";\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](7);\n              setError(_context.t0.response.data.error);\n              setTimeout(function () {\n                setError(\"\");\n              }, 5000);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 18]]);\n    }));\n\n    return function resetPasswordHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    style: {\n      background: \"#f3f4f6\",\n      height: \"650px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"lg:p-12 max-w-xl lg:my-0 my-12 mx-auto p-6 space-y-\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: resetPasswordHandler,\n        class: \"lg:p-10 p-6 space-y-3 relative bg-white shadow-xl rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"lg:text-2xl text-xl font-semibold mb-6\",\n          children: \" Reset Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, _this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 43\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            class: \"mb-0\",\n            children: \" New Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"******\",\n            id: \"password\",\n            required: true,\n            value: password,\n            onChange: function onChange(e) {\n              return setPassword(e.target.value);\n            },\n            class: \"bg-gray-100 h-12 mt-2 px-3 rounded-md w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confpassword\",\n            class: \"mb-0\",\n            children: \" Confirm Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"******\",\n            id: \"confpassword\",\n            required: true,\n            value: confirmPassword,\n            onChange: function onChange(e) {\n              return setConfirmPassword(e.target.value);\n            },\n            class: \"bg-gray-100 h-12 mt-2 px-3 rounded-md w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, _this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 35\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"bg-blue-600 font-semibold p-2 mt-5 rounded-md text-center text-white w-full\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ResetPasswordScreen, \"gM6RkExoXTmd1ipYnQSS6ckOHjk=\");\n\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/user/components/screens/ResetPasswordScreen.js"],"names":["React","useState","Link","axios","ReactNotification","store","ResetPasswordScreen","history","match","password","setPassword","confirmPassword","setConfirmPassword","success","setSuccess","error","setError","resetPasswordHandler","e","preventDefault","config","header","setTimeout","post","params","token","data","console","log","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","window","location","href","response","background","height","target","value","color"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport \"./screen.css\";\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport { store } from 'react-notifications-component';\r\n\r\nconst ResetPasswordScreen = ({history, match}) =>{\r\n\r\n    const [password, setPassword]= useState(\"\");\r\n    const [confirmPassword, setConfirmPassword]= useState(\"\");\r\n    const [success, setSuccess]= useState(\"\");\r\n    const [error, setError]= useState(\"\");\r\n\r\n    const resetPasswordHandler = async (e) =>{\r\n        e.preventDefault();\r\n        const config = {\r\n            header: {\r\n                \"Content-Type\":\"appliation/json\"\r\n            },\r\n        };\r\n\r\n        if(password !== confirmPassword){\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() =>{\r\n                setError(\"\")\r\n            }, 5000);\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        try {\r\n            const {data} = await axios.post(\r\n            `https://aaweni.herokuapp.com/api/auth/resetpassword/${match.params.token}`,\r\n            {\r\n                password,\r\n            },\r\n                config\r\n                );\r\n            console.log(data);\r\n            setSuccess(data.data);\r\n            store.addNotification({\r\n                title: \"Succeeded\",\r\n                message: \"Your password has been changed with success\",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                  duration: 3000,\r\n                  onScreen: true\r\n                }\r\n              });\r\n              \r\n            window.location.href = \"https://3aweni.netlify.app/login\";\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <body style={{background:\"#f3f4f6\",height:\"650px\"}}>\r\n            <ReactNotification/>\r\n                <div class=\"lg:p-12 max-w-xl lg:my-0 my-12 mx-auto p-6 space-y-\">\r\n                    <form onSubmit={resetPasswordHandler} class=\"lg:p-10 p-6 space-y-3 relative bg-white shadow-xl rounded-md\">\r\n                        <h1 class=\"lg:text-2xl text-xl font-semibold mb-6\"> Reset Password </h1>\r\n                        {success && (\r\n                            <span>\r\n                                {success} <Link to=\"/login\">Login</Link>\r\n                            </span>\r\n                        )}\r\n                      \r\n                        <div>\r\n                            <label htmlFor=\"password\" class=\"mb-0\"> New Password </label>\r\n                            <input type=\"password\" placeholder=\"******\" id=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} class=\"bg-gray-100 h-12 mt-2 px-3 rounded-md w-full\"/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"confpassword\" class=\"mb-0\"> Confirm Password </label>\r\n                            <input type=\"password\" placeholder=\"******\" id=\"confpassword\" required value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} class=\"bg-gray-100 h-12 mt-2 px-3 rounded-md w-full\"/>\r\n                        </div>\r\n                        {error && <span style={{color:'red'}}>{error}</span>}\r\n                        <div>\r\n                            <button type=\"submit\" class=\"bg-blue-600 font-semibold p-2 mt-5 rounded-md text-center text-white w-full\">\r\n                                Reset Password</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        </body>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPasswordScreen;\r\n"]},"metadata":{},"sourceType":"module"}