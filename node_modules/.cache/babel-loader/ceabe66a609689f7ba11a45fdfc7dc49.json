{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { queryApi } from \"../../utils/queryApi\";\nlet initialState = {\n  courses: [],\n  coursesofuser: [],\n  selectedCourse: [],\n  errors: \"\"\n};\nconst coursesSlice = createSlice({\n  name: \"courses\",\n  initialState,\n  reducers: {\n    populateCourses(state, action) {\n      state.courses = action.payload;\n    },\n\n    selectCourse(state, action) {\n      state.populateCourses = action.payload;\n    },\n\n    coursesofuser(state, action) {\n      state.coursesofuser = action.payload;\n    },\n\n    addcourse: (state, action) => {\n      const payload = action.payload;\n      state.courses.push(payload);\n      state.coursesofuser.push(payload);\n    },\n    updatecourse: (state, action) => {\n      const payload = action.payload.course;\n      const index = state.courses.findIndex(item => item._id === payload._id);\n      const ind = state.coursesofuser.findIndex(item => item._id === payload._id);\n\n      if (index !== -1) {\n        state.courses[index] = payload;\n      }\n\n      if (ind !== -1) {\n        state.coursesofuser[index] = payload;\n      }\n    },\n    deleteCourse: (state, action) => {\n      const payload = action.payload;\n      const index = state.courses.findIndex(course => course._id === payload);\n      const ind = state.coursesofuser.findIndex(course => course._id === payload);\n\n      if (index !== -1) {\n        state.courses.splice(index, 1);\n      }\n\n      if (ind !== -1) {\n        state.coursesofuser.splice(ind, 1);\n      }\n    },\n    searchcourse: (state, action) => {\n      state.courses = action.payload;\n    },\n\n    filtercoursebylevel(state, action) {\n      state.courses = action.payload;\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    }\n\n  }\n});\nexport const fetchCourses = () => async dispatch => {\n  const [res, error] = await queryApi(\"course\");\n\n  if (error) {\n    console.log(error);\n  } else {\n    dispatch(populateCourses(res));\n  }\n};\nexport const fetchCoursesofUser = () => async dispatch => {\n  const [res, error] = await queryApi(\"course/coursesbyuser\", null, \"GET\", false);\n\n  if (error) {\n    console.log(error);\n  } else {\n    dispatch(coursesofuser(res));\n  }\n};\nexport const searchcoursesbyName = Name => async dispatch => {\n  const [res, error] = await queryApi(\"course/searchnamelike/\" + Name);\n\n  if (error) {\n    console.log(error);\n  } else {\n    dispatch(searchcourse(res));\n  }\n};\nexport const filtercoursesbyLevel = Level => async dispatch => {\n  const [res, error] = await queryApi(\"course/filterbylevel/\" + Level);\n\n  if (error) {\n    console.log(error);\n  } else {\n    dispatch(filtercoursebylevel(res));\n  }\n};\nexport const selectCourses = state => {\n  return [state.courses.courses, state.courses.errors];\n};\nexport const selectCoursesofuser = state => {\n  return [state.courses.coursesofuser];\n};\nexport const {\n  updatecourse,\n  coursesofuser,\n  populateCourses,\n  addcourse,\n  searchcourse,\n  setErrors,\n  deleteCourse,\n  selectCourse,\n  filtercoursebylevel\n} = coursesSlice.actions;\nexport default coursesSlice.reducer;","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/slices/coursesSlice.js"],"names":["createSlice","queryApi","initialState","courses","coursesofuser","selectedCourse","errors","coursesSlice","name","reducers","populateCourses","state","action","payload","selectCourse","addcourse","push","updatecourse","course","index","findIndex","item","_id","ind","deleteCourse","splice","searchcourse","filtercoursebylevel","setErrors","fetchCourses","dispatch","res","error","console","log","fetchCoursesofUser","searchcoursesbyName","Name","filtercoursesbyLevel","Level","selectCourses","selectCoursesofuser","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { queryApi } from \"../../utils/queryApi\";\r\nlet initialState = {\r\n    courses: [],\r\n    coursesofuser:[],\r\n    selectedCourse:[],\r\n    errors: \"\",\r\n    };\r\nconst coursesSlice=createSlice({\r\n    name: \"courses\",\r\n    initialState,\r\n    reducers: {\r\n        populateCourses(state, action) {\r\n     \r\n        state.courses = action.payload;\r\n        },\r\n   \r\n        selectCourse(state, action) {\r\n       \r\n            state.populateCourses = action.payload;\r\n            },\r\n            coursesofuser(state, action) {\r\n       \r\n                state.coursesofuser = action.payload;\r\n                },\r\n            \r\n        addcourse: (state, action) => {\r\n            const payload = action.payload;\r\n            state.courses.push(payload);\r\n            state.coursesofuser.push(payload);\r\n            },\r\n            updatecourse: (state, action) => {\r\n                const payload = action.payload.course;\r\n              \r\n                const index = state.courses.findIndex(\r\n                (item) => item._id === payload._id\r\n                );\r\n\r\n                const ind = state.coursesofuser.findIndex(\r\n                    (item) => item._id === payload._id\r\n                    );\r\n           \r\n                if (index !== -1) {\r\n                state.courses[index] = payload;\r\n                }\r\n\r\n                if (ind !== -1) {\r\n                    state.coursesofuser[index] = payload;\r\n                    }\r\n                },\r\n        deleteCourse: (state, action) => {\r\n           \r\n            const payload = action.payload;\r\n            const index = state.courses.findIndex((course) => course._id === payload);\r\n            const ind = state.coursesofuser.findIndex((course) => course._id === payload);\r\n            if (index !== -1) {\r\n                state.courses.splice(index, 1);\r\n                               }\r\n                if (ind !== -1) {\r\n          state.coursesofuser.splice(ind, 1);\r\n               }\r\n       },\r\n       searchcourse :(state, action)=>{\r\n        state.courses = action.payload;\r\n        }\r\n       ,\r\n       filtercoursebylevel (state, action){\r\n        state.courses = action.payload;\r\n        }\r\n       ,\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n\r\nexport const fetchCourses=()=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"course\");\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(populateCourses(res));\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCoursesofUser=()=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"course/coursesbyuser\",null,\"GET\",false);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(coursesofuser(res));\r\n    }\r\n}\r\n\r\nexport const searchcoursesbyName=(Name)=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"course/searchnamelike/\"+Name);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n      dispatch(searchcourse(res));\r\n    }\r\n}\r\n\r\n\r\nexport const filtercoursesbyLevel=(Level)=>async(dispatch)=>{\r\n    const [res,error]=await queryApi(\"course/filterbylevel/\"+Level);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    else{\r\n        dispatch(filtercoursebylevel(res));\r\n    }\r\n}\r\nexport const selectCourses=(state)=>{\r\n    return [state.courses.courses,state.courses.errors];\r\n}\r\n\r\nexport const selectCoursesofuser=(state)=>{\r\n    return [state.courses.coursesofuser];\r\n}\r\nexport const {updatecourse,coursesofuser,populateCourses,addcourse,searchcourse,setErrors,deleteCourse,selectCourse,filtercoursebylevel}=coursesSlice.actions;\r\nexport default coursesSlice.reducer;"]},"metadata":{},"sourceType":"module"}