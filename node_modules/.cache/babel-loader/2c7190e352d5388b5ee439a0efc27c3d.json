{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nlet initialState = {\n  users: [],\n  selectedUser: {},\n  errors: \"\"\n};\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    populateUsers(state, action) {\n      state.users = action.payload;\n    },\n\n    selectUser(state, action) {\n      state.populateUsers = action.payload;\n    },\n\n    addUser: (state, action) => {\n      const payload = action.payload;\n      state.users.push(payload);\n    },\n    updateUser: (state, action) => {\n      const payload = action.payload;\n      state.users.set(payload);\n    },\n    deleteUser: (state, action) => {\n      const payload = action.payload;\n      const index = state.users.findIndex(user => user._id === payload);\n\n      if (index !== -1) {\n        state.users.splice(index, 1);\n      }\n    },\n    selectoneuser: (state, action) => {\n      const payload = action.payload;\n      state.selectedUser = action.payload;\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    }\n\n  }\n});\nexport const fetchUsers = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"appliation/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n  axios.get(`/api/auth/all_users`, config).then(response => {\n    dispatch(populateUsers(response.data));\n    console.log(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const fetchconnectuser = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"appliation/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n    }\n  };\n  axios.get(\"/api/auth/details_user\", config).then(response => {\n    dispatch(selectoneuser(response.data.data));\n  });\n};\nexport const selectSessionUser = state => {\n  return [state.users.selectedUser];\n};\nexport const selectUsers = state => {\n  return [state.users.users, state.users.errors];\n};\nexport const {\n  populateUsers,\n  addUser,\n  setErrors,\n  deleteUser,\n  selectUser,\n  updateUser,\n  selectoneuser\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/slices/userSlice.js"],"names":["createSlice","axios","initialState","users","selectedUser","errors","usersSlice","name","reducers","populateUsers","state","action","payload","selectUser","addUser","push","updateUser","set","deleteUser","index","findIndex","user","_id","splice","selectoneuser","setErrors","fetchUsers","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","fetchconnectuser","selectSessionUser","selectUsers","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    users: [],\r\n    selectedUser: {},\r\n    errors: \"\",\r\n    };\r\nconst usersSlice=createSlice({\r\n    name: \"users\",\r\n    initialState,\r\n    reducers: {\r\n        populateUsers(state, action) {\r\n        state.users = action.payload;\r\n        },\r\n        selectUser(state, action) {\r\n            state.populateUsers = action.payload;\r\n            },\r\n            \r\n        addUser: (state, action) => {\r\n            const payload = action.payload;\r\n            state.users.push(payload);\r\n            },\r\n        updateUser: (state, action) => {\r\n                const payload = action.payload;\r\n                state.users.set(payload);\r\n                },\r\n        deleteUser: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.users.findIndex((user) => user._id === payload);\r\n            if (index !== -1) {\r\n                state.users.splice(index, 1);\r\n                               }\r\n       },\r\n       selectoneuser:\r\n       (state, action) => {\r\n        const payload = action.payload;\r\n        state.selectedUser=  action.payload;\r\n        },\r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchUsers=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`/api/auth/all_users`, config)\r\n                .then((response) => {\r\n                 dispatch(populateUsers(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\nexport const fetchconnectuser=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(\"/api/auth/details_user\",config).then((response)=>{\r\n        dispatch(selectoneuser(response.data.data));\r\n     });\r\n\r\n}\r\n\r\n\r\n\r\nexport const selectSessionUser=(state)=>{\r\n    return [state.users.selectedUser];\r\n}\r\nexport const selectUsers=(state)=>{\r\n    return [state.users.users,state.users.errors];\r\n}\r\nexport const {populateUsers,addUser,setErrors,deleteUser,selectUser,updateUser,selectoneuser}=usersSlice.actions;\r\nexport default usersSlice.reducer;"]},"metadata":{},"sourceType":"module"}