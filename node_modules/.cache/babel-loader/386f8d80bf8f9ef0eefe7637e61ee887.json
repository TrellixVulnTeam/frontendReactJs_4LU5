{"ast":null,"code":"import _slicedToArray from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chaki\\\\OneDrive\\\\Desktop\\\\aymenouerghui\\\\frontendReactJs\\\\src\\\\user\\\\components\\\\Post\\\\AddPostPopup.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { createPost, getPosts, resetSaved } from \"../../../redux/actions/postAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Picker from \"emoji-picker-react\";\nimport FormBody from \"./FormBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPostPopup(props) {\n  _s();\n\n  var desc = useRef();\n  var openPopup = props.openPopup,\n      setopenPopup = props.setopenPopup,\n      groupid = props.groupid;\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chosenEmoji = _useState2[0],\n      setChosenEmoji = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showEmoji = _useState4[0],\n      setshowEmoji = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setmessage = _useState6[1];\n\n  var onEmojiClick = function onEmojiClick(event, emojiObject) {\n    //const ref = desc.current;\n    //ref.focus();\n    setChosenEmoji(emojiObject);\n    /*const start = message.substring(0, ref.selectionStart);\r\n    const end = message.substring(ref.selectionStart);\r\n    setmessage(start + chosenEmoji.emoji + end);*/\n  };\n\n  function handleFormSubmit(values, bag) {\n    var formData = new FormData();\n    Object.keys(values).forEach(function (key) {\n      return formData.append(key, values[key]);\n    }); //axios.post(\"http://localhost:3000/pi/postRoute/post\", formData);\n    //this.bag = bag;\n\n    dispatch(createPost(formData));\n    setopenPopup(false);\n  }\n\n  var saved = useSelector(function (state) {\n    return state.postReducer.saved;\n  });\n  useEffect(function () {\n    if (saved) {\n      dispatch(getPosts());\n      dispatch(resetSaved());\n    }\n  }, [dispatch, saved]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openPopup,\n    children: /*#__PURE__*/_jsxDEV(FormBody, {\n      onSubmit: handleFormSubmit,\n      setopenPopup: setopenPopup,\n      groupid: groupid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPostPopup, \"nhBcB7MQdQ+tNxLnvrxWMU611j4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddPostPopup;\nexport default AddPostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostPopup\");","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/user/components/Post/AddPostPopup.js"],"names":["React","useEffect","useRef","useState","Dialog","createPost","getPosts","resetSaved","useDispatch","useSelector","Picker","FormBody","AddPostPopup","props","desc","openPopup","setopenPopup","groupid","dispatch","chosenEmoji","setChosenEmoji","showEmoji","setshowEmoji","message","setmessage","onEmojiClick","event","emojiObject","handleFormSubmit","values","bag","formData","FormData","Object","keys","forEach","key","append","saved","state","postReducer"],"mappings":";;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,mCAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B,MAAMC,IAAI,GAAGZ,MAAM,EAAnB;AAF2B,MAInBa,SAJmB,GAIiBF,KAJjB,CAInBE,SAJmB;AAAA,MAIRC,YAJQ,GAIiBH,KAJjB,CAIRG,YAJQ;AAAA,MAIKC,OAJL,GAIiBJ,KAJjB,CAIKI,OAJL;AAK3B,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAL2B,kBAMWL,QAAQ,CAAC,IAAD,CANnB;AAAA;AAAA,MAMpBgB,WANoB;AAAA,MAMPC,cANO;;AAAA,mBAOOjB,QAAQ,CAAC,KAAD,CAPf;AAAA;AAAA,MAOpBkB,SAPoB;AAAA,MAOTC,YAPS;;AAAA,mBAQGnB,QAAQ,CAAC,EAAD,CARX;AAAA;AAAA,MAQpBoB,OARoB;AAAA,MAQXC,UARW;;AAU3B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,WAAR,EAAwB;AAC3C;AACA;AACAP,IAAAA,cAAc,CAACO,WAAD,CAAd;AACA;AACJ;AACA;AACG,GAPD;;AASA,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuC;AACrC,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA4B,UAACC,GAAD;AAAA,aAASL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBP,MAAM,CAACO,GAAD,CAA3B,CAAT;AAAA,KAA5B,EAFqC,CAGrC;AACA;;AACAlB,IAAAA,QAAQ,CAACb,UAAU,CAAC0B,QAAD,CAAX,CAAR;AAEAf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,MAAMsB,KAAK,GAAG7B,WAAW,CAAC,UAAC8B,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBF,KAA7B;AAAA,GAAD,CAAzB;AACArC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIqC,KAAJ,EAAW;AACTpB,MAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACAY,MAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACD;AACF,GALQ,EAKN,CAACW,QAAD,EAAWoB,KAAX,CALM,CAAT;AAOA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEvB,SAAd;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEa,gBAApB;AAAsC,MAAA,YAAY,EAAEZ,YAApD;AAAkE,MAAA,OAAO,EAAEC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1CQL,Y;UAKUJ,W,EAwBHC,W;;;KA7BPG,Y;AA4CT,eAAeA,YAAf","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nimport { createPost, getPosts, resetSaved } from \"../../../redux/actions/postAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport FormBody from \"./FormBody\";\r\n\r\nfunction AddPostPopup(props) {\r\n \r\n  const desc = useRef();\r\n\r\n  const { openPopup, setopenPopup,groupid } = props;\r\n  const dispatch = useDispatch();\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [showEmoji, setshowEmoji] = useState(false);\r\n  const [message, setmessage] = useState(\"\");\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    //const ref = desc.current;\r\n    //ref.focus();\r\n    setChosenEmoji(emojiObject);\r\n    /*const start = message.substring(0, ref.selectionStart);\r\n    const end = message.substring(ref.selectionStart);\r\n    setmessage(start + chosenEmoji.emoji + end);*/\r\n  };\r\n\r\n  function handleFormSubmit(values, bag) {\r\n    const formData = new FormData();\r\n    Object.keys(values).forEach((key) => formData.append(key, values[key]));\r\n    //axios.post(\"http://localhost:3000/pi/postRoute/post\", formData);\r\n    //this.bag = bag;\r\n    dispatch(createPost(formData));\r\n \r\n    setopenPopup(false);\r\n  }\r\n\r\n  const saved = useSelector((state) => state.postReducer.saved);\r\n  useEffect(() => {\r\n    if (saved) {\r\n      dispatch(getPosts());\r\n      dispatch(resetSaved());\r\n    }\r\n  }, [dispatch, saved]);\r\n\r\n  return (\r\n    <Dialog open={openPopup}>\r\n      <FormBody onSubmit={handleFormSubmit} setopenPopup={setopenPopup} groupid={groupid} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddPostPopup;\r\n"]},"metadata":{},"sourceType":"module"}