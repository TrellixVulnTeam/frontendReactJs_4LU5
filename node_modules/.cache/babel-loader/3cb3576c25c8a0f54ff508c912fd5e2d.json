{"ast":null,"code":"import { extractWeightEntryFactory } from 'tfjs-image-recognition-base';\nimport { SeparableConvParams } from 'tfjs-tiny-yolov2';\nexport function loadParamsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n\n  function extractConvParams(prefix) {\n    var filters = extractWeightEntry(prefix + \"/filters\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n\n  function extractSeparableConvParams(prefix) {\n    var depthwise_filter = extractWeightEntry(prefix + \"/depthwise_filter\", 4);\n    var pointwise_filter = extractWeightEntry(prefix + \"/pointwise_filter\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\n  }\n\n  function extractDenseBlock3Params(prefix, isFirstLayer) {\n    if (isFirstLayer === void 0) {\n      isFirstLayer = false;\n    }\n\n    var conv0 = isFirstLayer ? extractConvParams(prefix + \"/conv0\") : extractSeparableConvParams(prefix + \"/conv0\");\n    var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\n    var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\n    return {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2\n    };\n  }\n\n  function extractDenseBlock4Params(prefix, isFirstLayer) {\n    if (isFirstLayer === void 0) {\n      isFirstLayer = false;\n    }\n\n    var conv0 = isFirstLayer ? extractConvParams(prefix + \"/conv0\") : extractSeparableConvParams(prefix + \"/conv0\");\n    var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\n    var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\n    var conv3 = extractSeparableConvParams(prefix + \"/conv3\");\n    return {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2,\n      conv3: conv3\n    };\n  }\n\n  return {\n    extractDenseBlock3Params: extractDenseBlock3Params,\n    extractDenseBlock4Params: extractDenseBlock4Params\n  };\n}","map":{"version":3,"sources":["../../../src/faceFeatureExtractor/loadParamsFactory.ts"],"names":[],"mappings":"AACA,SAAS,yBAAT,QAAwD,6BAAxD;AACA,SAAqB,mBAArB,QAAgD,kBAAhD;AAIA,OAAM,SAAA,iBAAA,CAA4B,SAA5B,EAA4C,aAA5C,EAAyE;AAE7E,MAAM,kBAAkB,GAAG,yBAAyB,CAAC,SAAD,EAAY,aAAZ,CAApD;;AAEA,WAAA,iBAAA,CAA2B,MAA3B,EAAyC;AACvC,QAAM,OAAO,GAAG,kBAAkB,CAAiB,MAAM,GAAA,UAAvB,EAAmC,CAAnC,CAAlC;AACA,QAAM,IAAI,GAAG,kBAAkB,CAAiB,MAAM,GAAA,OAAvB,EAAgC,CAAhC,CAA/B;AAEA,WAAO;AAAE,MAAA,OAAO,EAAA,OAAT;AAAW,MAAA,IAAI,EAAA;AAAf,KAAP;AACD;;AAED,WAAA,0BAAA,CAAoC,MAApC,EAAkD;AAChD,QAAM,gBAAgB,GAAG,kBAAkB,CAAiB,MAAM,GAAA,mBAAvB,EAA4C,CAA5C,CAA3C;AACA,QAAM,gBAAgB,GAAG,kBAAkB,CAAiB,MAAM,GAAA,mBAAvB,EAA4C,CAA5C,CAA3C;AACA,QAAM,IAAI,GAAG,kBAAkB,CAAiB,MAAM,GAAA,OAAvB,EAAgC,CAAhC,CAA/B;AAEA,WAAO,IAAI,mBAAJ,CACL,gBADK,EAEL,gBAFK,EAGL,IAHK,CAAP;AAKD;;AAED,WAAA,wBAAA,CAAkC,MAAlC,EAAkD,YAAlD,EAA+E;AAA7B,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,KAAA;AAA6B;;AAC7E,QAAM,KAAK,GAAG,YAAY,GACtB,iBAAiB,CAAI,MAAM,GAAA,QAAV,CADK,GAEtB,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAF9B;AAGA,QAAM,KAAK,GAAG,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAAxC;AACA,QAAM,KAAK,GAAG,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAAxC;AAEA,WAAO;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,KAAK,EAAA,KAAd;AAAgB,MAAA,KAAK,EAAA;AAArB,KAAP;AACD;;AAED,WAAA,wBAAA,CAAkC,MAAlC,EAAkD,YAAlD,EAA+E;AAA7B,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,KAAA;AAA6B;;AAC7E,QAAM,KAAK,GAAG,YAAY,GACtB,iBAAiB,CAAI,MAAM,GAAA,QAAV,CADK,GAEtB,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAF9B;AAGA,QAAM,KAAK,GAAG,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAAxC;AACA,QAAM,KAAK,GAAG,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAAxC;AACA,QAAM,KAAK,GAAG,0BAA0B,CAAI,MAAM,GAAA,QAAV,CAAxC;AAEA,WAAO;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,KAAK,EAAA,KAAd;AAAgB,MAAA,KAAK,EAAA,KAArB;AAAuB,MAAA,KAAK,EAAA;AAA5B,KAAP;AACD;;AAED,SAAO;AACL,IAAA,wBAAwB,EAAA,wBADnB;AAEL,IAAA,wBAAwB,EAAA;AAFnB,GAAP;AAID","sourceRoot":"","sourcesContent":["import { extractWeightEntryFactory } from 'tfjs-image-recognition-base';\r\nimport { SeparableConvParams } from 'tfjs-tiny-yolov2';\r\nexport function loadParamsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractSeparableConvParams(prefix) {\r\n        var depthwise_filter = extractWeightEntry(prefix + \"/depthwise_filter\", 4);\r\n        var pointwise_filter = extractWeightEntry(prefix + \"/pointwise_filter\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\r\n    }\r\n    function extractDenseBlock3Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2 };\r\n    }\r\n    function extractDenseBlock4Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        var conv3 = extractSeparableConvParams(prefix + \"/conv3\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3 };\r\n    }\r\n    return {\r\n        extractDenseBlock3Params: extractDenseBlock3Params,\r\n        extractDenseBlock4Params: extractDenseBlock4Params\r\n    };\r\n}\r\n//# sourceMappingURL=loadParamsFactory.js.map"]},"metadata":{},"sourceType":"module"}