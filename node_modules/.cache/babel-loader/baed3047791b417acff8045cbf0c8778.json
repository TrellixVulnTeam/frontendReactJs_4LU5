{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nvar initialState = {\n  projects: [],\n  selectedProject: {},\n  errors: \"\"\n};\nvar projectsSlice = createSlice({\n  name: \"projects\",\n  initialState: initialState,\n  reducers: {\n    populateProjects: function populateProjects(state, action) {\n      state.projects = action.payload;\n    },\n    selectProject: function selectProject(state, action) {\n      state.populateProjects = action.payload;\n    },\n    addProject: function addProject(state, action) {\n      var payload = action.payload;\n      state.projects.push(payload);\n    },\n    deleteProject: function deleteProject(state, action) {\n      var payload = action.payload;\n      var index = state.projects.findIndex(function (project) {\n        return project._id === payload;\n      });\n\n      if (index !== -1) {\n        state.projects.splice(index, 1);\n      }\n    },\n    updateProject: function updateProject(state, action) {\n      var payload = action.payload;\n      state.projects.set(payload);\n    },\n    setErrors: function setErrors(state, action) {\n      state.errors = action.payload;\n    }\n  }\n});\nexport var fetchProjects = function fetchProjects() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"appliation/json\",\n                  Authorization: \"Bearer \".concat(localStorage.getItem(\"authToken\"))\n                }\n              };\n              axios.get(\"https://aaweni.herokuapp.com/project/getAll\", config).then(function (response) {\n                dispatch(populateProjects(response.data));\n                console.log(response.data);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var selectProjects = function selectProjects(state) {\n  return [state.projects.projects, state.projects.errors];\n};\nvar _projectsSlice$action = projectsSlice.actions,\n    populateProjects = _projectsSlice$action.populateProjects,\n    addProject = _projectsSlice$action.addProject,\n    setErrors = _projectsSlice$action.setErrors,\n    deleteProject = _projectsSlice$action.deleteProject,\n    selectProject = _projectsSlice$action.selectProject,\n    updateProject = _projectsSlice$action.updateProject;\nexport { populateProjects, addProject, setErrors, deleteProject, selectProject, updateProject };\nexport default projectsSlice.reducer;","map":{"version":3,"sources":["C:/Users/chaki/OneDrive/Desktop/aymenouerghui/frontendReactJs/src/redux/slices/projectSlice.js"],"names":["createSlice","axios","initialState","projects","selectedProject","errors","projectsSlice","name","reducers","populateProjects","state","action","payload","selectProject","addProject","push","deleteProject","index","findIndex","project","_id","splice","updateProject","set","setErrors","fetchProjects","dispatch","config","headers","Authorization","localStorage","getItem","get","then","response","data","console","log","catch","error","selectProjects","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nlet initialState = {\r\n    projects: [],\r\n    selectedProject: {},\r\n    errors: \"\",\r\n    };\r\nconst projectsSlice=createSlice({\r\n    name: \"projects\",\r\n    initialState,\r\n    reducers: {\r\n        populateProjects(state, action) {\r\n        state.projects = action.payload;\r\n        },\r\n        selectProject(state, action) {\r\n            state.populateProjects = action.payload;\r\n            },\r\n        addProject: (state, action) => {\r\n            const payload = action.payload;\r\n            state.projects.push(payload);\r\n            },\r\n        deleteProject: (state, action) => {\r\n            const payload = action.payload;\r\n            const index = state.projects.findIndex((project) => project._id === payload);\r\n            if (index !== -1) {\r\n                state.projects.splice(index, 1);\r\n                               }\r\n       },\r\n       updateProject: (state, action) => {\r\n        const payload = action.payload;\r\n        state.projects.set(payload);\r\n                           },\r\n      \r\n    \r\n         setErrors(state, action) {\r\n                 state.errors = action.payload;\r\n          },\r\n             },\r\n             \r\n        \r\n        });\r\n        \r\n\r\nexport const fetchProjects=()=>async(dispatch)=>{\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":\"appliation/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n        }\r\n    }\r\n    axios.get(`https://aaweni.herokuapp.com/project/getAll`, config)\r\n                .then((response) => {\r\n                 dispatch(populateProjects(response.data));\r\n                 console.log(response.data)\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error)\r\n                })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const selectProjects=(state)=>{\r\n    return [state.projects.projects,state.projects.errors];\r\n}\r\nexport const {populateProjects,addProject,setErrors,deleteProject,selectProject,updateProject}=projectsSlice.actions;\r\nexport default projectsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}