{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siwar\\\\Desktop\\\\front\\\\src\\\\user\\\\components\\\\Post\\\\AddPostPopup.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { createPost, getPosts, resetSaved } from \"../../../redux/actions/postAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Picker from \"emoji-picker-react\";\nimport FormBody from \"./FormBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPostPopup(props) {\n  _s();\n\n  const desc = useRef();\n  const {\n    openPopup,\n    setopenPopup,\n    groupid\n  } = props;\n  const dispatch = useDispatch();\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [showEmoji, setshowEmoji] = useState(false);\n  const [message, setmessage] = useState(\"\");\n\n  const onEmojiClick = (event, emojiObject) => {\n    //const ref = desc.current;\n    //ref.focus();\n    setChosenEmoji(emojiObject);\n    /*const start = message.substring(0, ref.selectionStart);\r\n    const end = message.substring(ref.selectionStart);\r\n    setmessage(start + chosenEmoji.emoji + end);*/\n  };\n\n  function handleFormSubmit(values, bag) {\n    const formData = new FormData();\n    Object.keys(values).forEach(key => formData.append(key, values[key])); //axios.post(\"http://localhost:3000/pi/postRoute/post\", formData);\n    //this.bag = bag;\n\n    dispatch(createPost(formData));\n    setopenPopup(false);\n  }\n\n  const saved = useSelector(state => state.postReducer.saved);\n  useEffect(() => {\n    if (saved) {\n      dispatch(getPosts());\n      dispatch(resetSaved());\n    }\n  }, [dispatch, saved]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openPopup,\n    children: /*#__PURE__*/_jsxDEV(FormBody, {\n      onSubmit: handleFormSubmit,\n      setopenPopup: setopenPopup,\n      groupid: groupid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPostPopup, \"nhBcB7MQdQ+tNxLnvrxWMU611j4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddPostPopup;\nexport default AddPostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostPopup\");","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/user/components/Post/AddPostPopup.js"],"names":["React","useEffect","useRef","useState","Dialog","createPost","getPosts","resetSaved","useDispatch","useSelector","Picker","FormBody","AddPostPopup","props","desc","openPopup","setopenPopup","groupid","dispatch","chosenEmoji","setChosenEmoji","showEmoji","setshowEmoji","message","setmessage","onEmojiClick","event","emojiObject","handleFormSubmit","values","bag","formData","FormData","Object","keys","forEach","key","append","saved","state","postReducer"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,mCAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B,QAAMC,IAAI,GAAGZ,MAAM,EAAnB;AAEA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA0BC,IAAAA;AAA1B,MAAsCJ,KAA5C;AACA,QAAMK,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMsB,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC3C;AACA;AACAP,IAAAA,cAAc,CAACO,WAAD,CAAd;AACA;AACJ;AACA;AACG,GAPD;;AASA,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuC;AACrC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA6BC,GAAD,IAASL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBP,MAAM,CAACO,GAAD,CAA3B,CAArC,EAFqC,CAGrC;AACA;;AACAlB,IAAAA,QAAQ,CAACb,UAAU,CAAC0B,QAAD,CAAX,CAAR;AAEAf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,QAAMsB,KAAK,GAAG7B,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,KAA9B,CAAzB;AACArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,KAAJ,EAAW;AACTpB,MAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACAY,MAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACD;AACF,GALQ,EAKN,CAACW,QAAD,EAAWoB,KAAX,CALM,CAAT;AAOA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEvB,SAAd;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEa,gBAApB;AAAsC,MAAA,YAAY,EAAEZ,YAApD;AAAkE,MAAA,OAAO,EAAEC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1CQL,Y;UAKUJ,W,EAwBHC,W;;;KA7BPG,Y;AA4CT,eAAeA,YAAf","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nimport { createPost, getPosts, resetSaved } from \"../../../redux/actions/postAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport FormBody from \"./FormBody\";\r\n\r\nfunction AddPostPopup(props) {\r\n \r\n  const desc = useRef();\r\n\r\n  const { openPopup, setopenPopup,groupid } = props;\r\n  const dispatch = useDispatch();\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [showEmoji, setshowEmoji] = useState(false);\r\n  const [message, setmessage] = useState(\"\");\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    //const ref = desc.current;\r\n    //ref.focus();\r\n    setChosenEmoji(emojiObject);\r\n    /*const start = message.substring(0, ref.selectionStart);\r\n    const end = message.substring(ref.selectionStart);\r\n    setmessage(start + chosenEmoji.emoji + end);*/\r\n  };\r\n\r\n  function handleFormSubmit(values, bag) {\r\n    const formData = new FormData();\r\n    Object.keys(values).forEach((key) => formData.append(key, values[key]));\r\n    //axios.post(\"http://localhost:3000/pi/postRoute/post\", formData);\r\n    //this.bag = bag;\r\n    dispatch(createPost(formData));\r\n \r\n    setopenPopup(false);\r\n  }\r\n\r\n  const saved = useSelector((state) => state.postReducer.saved);\r\n  useEffect(() => {\r\n    if (saved) {\r\n      dispatch(getPosts());\r\n      dispatch(resetSaved());\r\n    }\r\n  }, [dispatch, saved]);\r\n\r\n  return (\r\n    <Dialog open={openPopup}>\r\n      <FormBody onSubmit={handleFormSubmit} setopenPopup={setopenPopup} groupid={groupid} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddPostPopup;\r\n"]},"metadata":{},"sourceType":"module"}