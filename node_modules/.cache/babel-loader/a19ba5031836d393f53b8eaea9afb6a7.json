{"ast":null,"code":"import axios from \"axios\";\nimport { GET_CATEGORIESP, DELETE_CATEGORYP, CATEGORYP_SAVED, RESETCAT_SAVED, CATP_UPDATED } from \"./types\";\nexport const getcategories = () => {\n  return async dispatch => {\n    return await axios.get(\"http://localhost:3000/pi/catRoute/categoryP\").then(res => {\n      dispatch({\n        type: GET_CATEGORIESP,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteCategory = catId => {\n  return async dispatch => {\n    try {\n      const res = await axios.delete(\"http://localhost:3000/pi/catRoute/categoryP/\" + catId);\n      dispatch({\n        type: DELETE_CATEGORYP,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const createCategory = catpost => {\n  return async dispatch => {\n    try {\n      return await axios.post(\"http://localhost:3000/pi/catRoute/categoryP\", catpost).then(res => dispatch({\n        type: CATEGORYP_SAVED,\n        payload: res.data\n      }));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const updateCategory = (catId, category) => {\n  return async dispatch => {\n    try {\n      const res = await axios.put(\"http://localhost:3000/pi/catRoute/categoryP/\" + catId, category);\n      dispatch({\n        type: CATP_UPDATED,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const resetCatSaved = () => ({\n  type: RESETCAT_SAVED\n});","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/actions/categorypAction.js"],"names":["axios","GET_CATEGORIESP","DELETE_CATEGORYP","CATEGORYP_SAVED","RESETCAT_SAVED","CATP_UPDATED","getcategories","dispatch","get","then","res","type","payload","data","catch","err","console","log","deleteCategory","catId","delete","error","createCategory","catpost","post","e","updateCategory","category","put","resetCatSaved"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,YALF,QAMO,SANP;AAQA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,WAAO,MAAMP,KAAK,CACfQ,GADU,CACN,6CADM,EAEVC,IAFU,CAEJC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEV,eAAR;AAAyBW,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAtC,OAAD,CAAR;AACD,KAJU,EAKVC,KALU,CAKHC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALL,CAAb;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMG,cAAc,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAOZ,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMG,GAAG,GAAG,MAAMV,KAAK,CAACoB,MAAN,CAAa,iDAAiDD,KAA9D,CAAlB;AAEAZ,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAET,gBAAR;AAA0BU,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAvC,OAAD,CAAR;AACD,KAJD,CAIE,OAAOQ,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAO,MAAOhB,QAAP,IAAoB;AACzB,QAAI;AACF,aAAO,MAAMP,KAAK,CACfwB,IADU,CACL,6CADK,EAC0CD,OAD1C,EAEVd,IAFU,CAEJC,GAAD,IAASH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAER,eAAR;AAAyBS,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAtC,OAAD,CAFZ,CAAb;AAGD,KAJD,CAIE,OAAOY,CAAP,EAAU;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACD;AACF,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,CAACP,KAAD,EAAQQ,QAAR,KAAqB;AACjD,SAAO,MAAOpB,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMG,GAAG,GAAG,MAAMV,KAAK,CAAC4B,GAAN,CAAU,iDAAiDT,KAA3D,EAAkEQ,QAAlE,CAAlB;AAEApB,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEN,YAAR;AAAsBO,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAnC,OAAD,CAAR;AACD,KAJD,CAIE,OAAOQ,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,GARD;AASD,CAVM;AAYP,OAAO,MAAMQ,aAAa,GAAG,OAAO;AAAElB,EAAAA,IAAI,EAAEP;AAAR,CAAP,CAAtB","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_CATEGORIESP,\r\n  DELETE_CATEGORYP,\r\n  CATEGORYP_SAVED,\r\n  RESETCAT_SAVED,\r\n  CATP_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const getcategories = () => {\r\n  return async (dispatch) => {\r\n    return await axios\r\n      .get(\"http://localhost:3000/pi/catRoute/categoryP\")\r\n      .then((res) => {\r\n        dispatch({ type: GET_CATEGORIESP, payload: res.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deleteCategory = (catId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(\"http://localhost:3000/pi/catRoute/categoryP/\" + catId);\r\n\r\n      dispatch({ type: DELETE_CATEGORYP, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createCategory = (catpost) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      return await axios\r\n        .post(\"http://localhost:3000/pi/catRoute/categoryP\", catpost)\r\n        .then((res) => dispatch({ type: CATEGORYP_SAVED, payload: res.data }));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCategory = (catId, category) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.put(\"http://localhost:3000/pi/catRoute/categoryP/\" + catId, category);\r\n\r\n      dispatch({ type: CATP_UPDATED, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetCatSaved = () => ({ type: RESETCAT_SAVED });\r\n"]},"metadata":{},"sourceType":"module"}