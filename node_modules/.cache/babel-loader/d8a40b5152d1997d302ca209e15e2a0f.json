{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siwar\\\\Desktop\\\\front\\\\src\\\\user\\\\components\\\\courses\\\\CourseChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from 'axios';\nimport { queryApi } from \"../../../utils/queryApi\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CourseChart() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let numberinroled = [];\n    let namecoursesenrolled = [];\n    axios.get(`${process.env.REACT_APP_API_URL}/usercourse/mostenrolled`).then(res => {\n      for (const dataobj of res.data) {\n        numberinroled.push(parseInt(dataobj.sum));\n        namecoursesenrolled.push(dataobj._id.Name);\n        console.log(numberinroled);\n      }\n\n      setChartData({\n        labels: namecoursesenrolled,\n        datasets: [{\n          label: \"number of users registered in course\",\n          data: numberinroled,\n          backgroundColor: \"#0cb9c1\"\n        }]\n      });\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []); //const mostenrolled =useApi(\"usercourse/mostenrolled\",null,\"GET\")[0];\n\n  const data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple'],\n    datasets: [{\n      label: \"sales\",\n      data: [3, 2, 5, 7, 4]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"400px\",\n        width: \"720px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          title: {\n            display: true,\n            text: \"Most enrolled courses\",\n            fontSize: 25\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CourseChart, \"O8A07i8ktTe3IkG2mQ6iAABjnbE=\");\n\n_c = CourseChart;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseChart\");","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/user/components/courses/CourseChart.js"],"names":["React","useState","useEffect","useCallback","axios","queryApi","useApi","Bar","Line","Doughnut","Header","CourseChart","chartData","setChartData","chart","numberinroled","namecoursesenrolled","get","process","env","REACT_APP_API_URL","then","res","dataobj","data","push","parseInt","sum","_id","Name","console","log","labels","datasets","label","backgroundColor","marginLeft","width","title","display","text","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,QAApB,QAAmC,iBAAnC;AACA,OAAOC,MAAP,MAAkB,WAAlB;;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;;AAED,QAAMa,KAAK,GAAE,MAAI;AAChB,QAAIC,aAAa,GAAC,EAAlB;AACA,QAAIC,mBAAmB,GAAC,EAAxB;AAECZ,IAAAA,KAAK,CAACa,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,0BAA3C,EAAsEC,IAAtE,CAA2EC,GAAG,IAC7E;AAEE,WAAK,MAAMC,OAAX,IAAsBD,GAAG,CAACE,IAA1B,EACA;AACET,QAAAA,aAAa,CAACU,IAAd,CAAmBC,QAAQ,CAACH,OAAO,CAACI,GAAT,CAA3B;AAEEX,QAAAA,mBAAmB,CAACS,IAApB,CAAyBF,OAAO,CAACK,GAAR,CAAYC,IAArC;AAGFC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AAED;;AACDF,MAAAA,YAAY,CAAC;AACXmB,QAAAA,MAAM,EAAChB,mBADI;AAEXiB,QAAAA,QAAQ,EAAC,CAAC;AACRC,UAAAA,KAAK,EAAC,sCADE;AAERV,UAAAA,IAAI,EAACT,aAFG;AAGRoB,UAAAA,eAAe,EAAC;AAHR,SAAD;AAFE,OAAD,CAAZ;AAUD,KAvBF;AAwBI,GA5BN;;AA6BCjC,EAAAA,SAAS,CAAC,MAAI;AAChBY,IAAAA,KAAK;AACF,GAFQ,EAEP,EAFO,CAAT,CAhCoC,CAmCpC;;AAGF,QAAMU,IAAI,GAAC;AACPQ,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,CADD;AAEPC,IAAAA,QAAQ,EAAC,CAAC;AAACC,MAAAA,KAAK,EAAC,OAAP;AAAeV,MAAAA,IAAI,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT;AAApB,KAAD;AAFF,GAAX;AAIE,sBACE;AAAA,4BACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADG,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAES;AAAA;AAAA;AAAA;AAAA,YAFT,eAEc;AAAA;AAAA;AAAA;AAAA,YAFd,eAEmB;AAAA;AAAA;AAAA;AAAA,YAFnB,eAEwB;AAAA;AAAA;AAAA;AAAA,YAFxB,eAE6B;AAAA;AAAA;AAAA;AAAA,YAF7B,eAGI;AAAM,MAAA,KAAK,EAAE;AAACY,QAAAA,UAAU,EAAC,OAAZ;AAAoBC,QAAAA,KAAK,EAAC;AAA1B,OAAb;AAAA,6BACR,QAAC,GAAD;AAAO,QAAA,IAAI,EAAEzB,SAAb;AAAyB,QAAA,OAAO,EAAE;AAAC0B,UAAAA,KAAK,EAAC;AAACC,YAAAA,OAAO,EAAC,IAAT;AAAcC,YAAAA,IAAI,EAAC,uBAAnB;AAA2CC,YAAAA,QAAQ,EAAC;AAApD;AAAP;AAAlC;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlDuB9B,W;;KAAAA,W;AAkDvB","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { queryApi } from \"../../../utils/queryApi\";\r\nimport { useApi } from \"../../../hooks/useApi\";\r\nimport { Bar, Line ,Doughnut} from 'react-chartjs-2';\r\nimport Header from'../Header';\r\nexport default function CourseChart() {\r\n  const [chartData,setChartData]=useState({});\r\n\r\n const chart= ()=>{\r\n  let numberinroled=[];\r\n  let namecoursesenrolled=[];\r\n\r\n   axios.get(`${process.env.REACT_APP_API_URL}/usercourse/mostenrolled`).then(res=>\r\n    {\r\n     \r\n      for (const dataobj of res.data)\r\n      {\r\n        numberinroled.push(parseInt(dataobj.sum));\r\n       \r\n          namecoursesenrolled.push(dataobj._id.Name);\r\n    \r\n     \r\n        console.log(numberinroled);\r\n\r\n      }\r\n      setChartData({\r\n        labels:namecoursesenrolled,\r\n        datasets:[{\r\n          label:\"number of users registered in course\",\r\n          data:numberinroled,\r\n          backgroundColor:\"#0cb9c1\"\r\n         \r\n        }\r\n        ]\r\n      });\r\n    }\r\n    );};\r\n  useEffect(()=>{\r\nchart();\r\n  },[])\r\n  //const mostenrolled =useApi(\"usercourse/mostenrolled\",null,\"GET\")[0];\r\n  \r\n\r\nconst data={\r\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple'],\r\n    datasets:[{label:\"sales\",data:[3,2,5,7,4]}]\r\n}\r\n  return (\r\n    <div >\r\n <Header />\r\n        <br/><br/><br/><br/><br/><br/>\r\n        <div  style={{marginLeft:\"400px\",width:\"720px\"}} >\r\n<Bar   data={chartData}  options={{title:{display:true,text:\"Most enrolled courses\",fontSize:25}}}  /></div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}