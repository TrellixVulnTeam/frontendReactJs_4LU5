{"ast":null,"code":"import { GET_POSTS, DELETE_POST, POST_SAVED, RESET_SAVED, POST_UPDATED } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  saved: false,\n  updated: false\n};\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      state = { ...state,\n        posts: action.payload.posts\n      };\n      return state;\n\n    case DELETE_POST:\n      state = state.posts.filter(post => post._id !== action.payload.posts._id);\n      return state;\n\n    case POST_SAVED:\n      return { ...state,\n        saved: true\n      };\n\n    case POST_UPDATED:\n      return { ...state,\n        updated: true\n      };\n\n    case RESET_SAVED:\n      return { ...state,\n        saved: false,\n        updated: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/siwar/Desktop/front/src/redux/reducers/postReducer.js"],"names":["GET_POSTS","DELETE_POST","POST_SAVED","RESET_SAVED","POST_UPDATED","initialState","posts","saved","updated","postReducer","state","action","type","payload","filter","post","_id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,WAA7C,EAA0DC,YAA1D,QAA8E,kBAA9E;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,KAAK,EAAE,KAApB;AAA2BC,EAAAA,OAAO,EAAE;AAApC,CAArB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,SAAL;AACEU,MAAAA,KAAK,GAAG,EAAE,GAAGA,KAAL;AAAYJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAAlC,OAAR;AACA,aAAOI,KAAP;;AACF,SAAKT,WAAL;AACES,MAAAA,KAAK,GAAGA,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeP,KAAf,CAAqBU,GAA/D,CAAR;AACA,aAAON,KAAP;;AACF,SAAKR,UAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AACF,SAAKH,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKL,WAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,KAAK,EAAE,KAAnB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAP;;AACF;AACE,aAAOE,KAAP;AAdJ;AAgBD","sourcesContent":["import { GET_POSTS, DELETE_POST, POST_SAVED, RESET_SAVED, POST_UPDATED } from \"../actions/types\";\r\n\r\nconst initialState = { posts: [], saved: false, updated: false };\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      state = { ...state, posts: action.payload.posts };\r\n      return state;\r\n    case DELETE_POST:\r\n      state = state.posts.filter((post) => post._id !== action.payload.posts._id);\r\n      return state;\r\n    case POST_SAVED:\r\n      return { ...state, saved: true };\r\n    case POST_UPDATED:\r\n      return { ...state, updated: true };\r\n    case RESET_SAVED:\r\n      return { ...state, saved: false, updated: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}